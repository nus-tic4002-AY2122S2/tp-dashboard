[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"# Overview","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"[![CI Status](https://github.com/AY2122S2-TIC4002-F18-5/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-TIC4002-F18-5/tp2/actions)","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"## TeamContact 24/7: A Contact Management App for the busy SE Project Manager","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"- **TeamContact 24/7 App** is an easy-to-use _mainly CLI, with some helpful GUI visual support_, **Java / JavaFx Program**","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"### Useful links:","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"* [User Guide](docs/UserGuide.md)","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"* [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"* [About Us](docs/AboutUs.md)","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"Product Name: **TeamContact 24/7**","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"Brief Description of App:-","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"- A specialized on-the-fly contact management application for a Software Engineering Project Manager on the go.","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"- It is designed to help organize and quickly manage current contact information for a small to medium size project team.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"- We will extend the core features and manage the continual updates to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"- This will make it useful for the project manager to manage his team(s) contact and work easily.","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"### Acknowledgment","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"gweeyc":21,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"    compile \u0027com.sun.mail:android-mail:1.5.5\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"    compile \u0027com.sun.mail:android-activation:1.5.5\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"    testCompile \u0027junit:junit:4.12\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"    archiveBaseName \u003d \u0027teamcontact 24-7-v1.4\u0027","lastModifiedDate":"2022-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":78,"author":{"gitId":"gweeyc"},"content":"run {","lastModifiedDate":"2022-02-11"},{"lineNumber":79,"author":{"gitId":"gweeyc"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-11"},{"lineNumber":80,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"gweeyc":5,"-":71,"YangShuogeng":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"We are a final-year undergrad SE team of 2022, based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"You are welcome to browse our respective GitHub sites or connect with us by emails.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"### Gwee Yeu Chai","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/gweeyc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"[[github](https://github.com/gweeyc)]","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"[[portfolio](team/gweeyc.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"* Role: Team Lead / Programmer","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"* Responsibilities: Admin + Log Command Code extensions + JavaFx Login Screen","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"### Low Yan Shuang","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/lowyanshuang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"[[github](http://github.com/lowyanshuang)] [[portfolio](team/yanshuang.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"* Responsibilities: UI + Data","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"### Yang Shuogeng","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/yangshuogeng.png\" width\u003d\"200\" height\u003d\"200\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"[[github](https://github.com/YangShuogeng)]     ","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"[[portfolio](team/yangshuogeng.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"* Responsibilities: Upgrade existing command + Add new command","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"### Tan Wei Hua","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/thisisdax.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"[[github](http://github.com/thisisdax)]","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"[[portfolio](team/thisisdax.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: DevOps + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Elxyng"},"content":"### Ng Xin Yi","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/elxyng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Elxyng"},"content":"[[github](http://github.com/elxyng)]","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"Elxyng"},"content":"[[portfolio](team/elxyng.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Elxyng":3,"gweeyc":12,"thisisdax":3,"lowyanshuang":3,"-":34,"YangShuogeng":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"* [TECHIE DELIGHT \u003c/\u003e Singleton Pattern – Java Implementation](https://www.techiedelight.com/implement-singleton-pattern-in-java/)","lastModifiedDate":"2022-04-03"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"* [tutorials.jenkov.com - Java Synchronized Blocks](http://tutorials.jenkov.com/java-concurrency/synchronized.html)","lastModifiedDate":"2022-04-03"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"* [docs.oracle.com Class](https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/lang/Class.html)","lastModifiedDate":"2022-04-03"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"* [Java Coding Community - Programming Tutorials](https://www.youtube.com/watch?v\u003dHBBtlwGpBek)","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"* [Glucon ScreenBuilder](https://gluonhq.com/products/scene-builder/)","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"thisisdax"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`.","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"thisisdax"},"content":"`addressBookStateList` can be implemented as an ArrayList to store all previous states of addressBook in history.","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"thisisdax"},"content":"`currentStatePointer` can be implemented as a counter indicating the current index of history.","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"thisisdax"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"gweeyc"},"content":"The above operations should inform user of errors indicated why it failed to perform the operation.","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"thisisdax"},"content":"* **Alternative 3:** Saves only the person list within the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":244,"author":{"gitId":"thisisdax"},"content":"  * Pros: Easy to implement and uses less memory compared to Alternative 1.","lastModifiedDate":"2022-03-17"},{"lineNumber":245,"author":{"gitId":"thisisdax"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-03-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"gweeyc"},"content":"### Software Security Feature 01: A GUI Login Front Screen","lastModifiedDate":"2022-03-17"},{"lineNumber":248,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":249,"author":{"gitId":"gweeyc"},"content":"Sample:-","lastModifiedDate":"2022-03-17"},{"lineNumber":250,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":251,"author":{"gitId":"gweeyc"},"content":"![Sample Login Screen](images/loginScreen.png)","lastModifiedDate":"2022-02-26"},{"lineNumber":252,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":253,"author":{"gitId":"gweeyc"},"content":"#### Implementation","lastModifiedDate":"2022-03-17"},{"lineNumber":254,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":255,"author":{"gitId":"gweeyc"},"content":"**_The motive for this online login security feature is to protect the sensitive data, displayed in TeamContact 24/7 App,","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"gweeyc"},"content":"from undesirable exposure to unwanted and or public viewing_**.","lastModifiedDate":"2022-03-17"},{"lineNumber":257,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":258,"author":{"gitId":"gweeyc"},"content":"The idea is to first load and only display the Login GUI Screen","lastModifiedDate":"2022-03-17"},{"lineNumber":259,"author":{"gitId":"gweeyc"},"content":"upon main App startup: so the user will have to enter in his or her login credentials before preview and access to the","lastModifiedDate":"2022-03-17"},{"lineNumber":260,"author":{"gitId":"gweeyc"},"content":"main App data is granted.","lastModifiedDate":"2022-03-17"},{"lineNumber":261,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":262,"author":{"gitId":"gweeyc"},"content":"Leveraging on JavaFx capabilities to hide and show stages, the frontend GUI Login Screen was made to load and displayed","lastModifiedDate":"2022-03-17"},{"lineNumber":263,"author":{"gitId":"gweeyc"},"content":"visually first, after the MainWindow GUI for TeamContact 24/7 App was initialised but rendered invisible meanwhile.","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":265,"author":{"gitId":"gweeyc"},"content":"ScreenBuilder was used to create the layout and specification of the Login GUI Screen and the data was saved to a Login.fxml file.","lastModifiedDate":"2022-03-17"},{"lineNumber":266,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":267,"author":{"gitId":"gweeyc"},"content":"A corresponding controller file, **LoginController.java**, was created to facilitate the creation and register of the various","lastModifiedDate":"2022-03-17"},{"lineNumber":268,"author":{"gitId":"gweeyc"},"content":"login checking methods (using TextFields) and the rendering of the error messages (using Label), under an ActionEvent handler","lastModifiedDate":"2022-03-30"},{"lineNumber":269,"author":{"gitId":"gweeyc"},"content":"**#handleButtonAction**.","lastModifiedDate":"2022-03-17"},{"lineNumber":270,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":271,"author":{"gitId":"gweeyc"},"content":"The start method of **MainApp.java** was adapted for the above purpose: to first initialise the main App loading, get","lastModifiedDate":"2022-03-30"},{"lineNumber":272,"author":{"gitId":"gweeyc"},"content":"its stage hidden, then load and show another newly created stage with the Login Screen Scene.","lastModifiedDate":"2022-03-17"},{"lineNumber":273,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":274,"author":{"gitId":"gweeyc"},"content":"Sample **SingletonLogin** UML Class Diagram:-","lastModifiedDate":"2022-03-17"},{"lineNumber":275,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":276,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/UMLClass_Singleton.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":277,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":278,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":279,"author":{"gitId":"gweeyc"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-17"},{"lineNumber":280,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":281,"author":{"gitId":"gweeyc"},"content":"- **MainWindow.java** was modified to not show the mainWindow of the main App upon first load","lastModifiedDate":"2022-04-03"},{"lineNumber":282,"author":{"gitId":"gweeyc"},"content":"- Username was made case-sensitive and Password is set to \"pin\" format instead of the usual expected text string,","lastModifiedDate":"2022-03-17"},{"lineNumber":283,"author":{"gitId":"gweeyc"},"content":"to make it harder to guess","lastModifiedDate":"2022-03-17"},{"lineNumber":284,"author":{"gitId":"gweeyc"},"content":"- The Login Screen object (from the SIngletonLogin class) is patterned after the Singleton creational design pattern to further increase security against possible rogue substitutes or false replacement","lastModifiedDate":"2022-04-03"},{"lineNumber":285,"author":{"gitId":"gweeyc"},"content":"- The SingletonLogin class was also made final to block any subclass attempt, it\u0027s getInstance() public static method made thread-safe and the constructor was modified to throw an exception if it\u0027s made to create a second instance reflectively ","lastModifiedDate":"2022-04-03"},{"lineNumber":286,"author":{"gitId":"gweeyc"},"content":"- The main App stage was also elevated as a class-level protected object (as appStage in MainApp.java), to increase security","lastModifiedDate":"2022-03-30"},{"lineNumber":287,"author":{"gitId":"gweeyc"},"content":"against unauthorised access or possible abuse","lastModifiedDate":"2022-03-17"},{"lineNumber":288,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":289,"author":{"gitId":"gweeyc"},"content":"The following activity diagram summarizes how the Login GUI Screen works upon TeamContact 24/7 App startup:-","lastModifiedDate":"2022-03-17"},{"lineNumber":290,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":291,"author":{"gitId":"gweeyc"},"content":"\u003cimg src\u003d\"images/ActivityDiag_LoginScr.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":292,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":293,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":294,"author":{"gitId":"gweeyc"},"content":"### Software Security Feature 02: A Logout Shortcut `ESC` Key","lastModifiedDate":"2022-03-17"},{"lineNumber":295,"author":{"gitId":"gweeyc"},"content":"- To aid the Project Manager log out of a TeamContact 24/7 App Session as and when desired","lastModifiedDate":"2022-03-19"},{"lineNumber":296,"author":{"gitId":"gweeyc"},"content":"- The login screen comes back on, hiding the app\u0027s sensitive data from public view, upon \u0027ESC\u0027 key pressed","lastModifiedDate":"2022-03-19"},{"lineNumber":297,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":298,"author":{"gitId":"gweeyc"},"content":"Sample \u0027ESC\u0027 key Logout Screenshot:-","lastModifiedDate":"2022-03-17"},{"lineNumber":299,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":300,"author":{"gitId":"gweeyc"},"content":"![Sample Esc key logout Sequence](images/EscSignout.png)","lastModifiedDate":"2022-03-17"},{"lineNumber":301,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":302,"author":{"gitId":"gweeyc"},"content":"- **MainWindow.fxml** was modified to handle onKeyPressed event **#keyPressedHandle** at the scene level","lastModifiedDate":"2022-03-17"},{"lineNumber":303,"author":{"gitId":"gweeyc"},"content":"- **MainWindow.java** had the corresponding keyPressedHandle handler method added in","lastModifiedDate":"2022-03-17"},{"lineNumber":304,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":305,"author":{"gitId":"YangShuogeng"},"content":"### Email Feature (Send email to particular contact person):","lastModifiedDate":"2022-04-01"},{"lineNumber":306,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":307,"author":{"gitId":"YangShuogeng"},"content":"Sample:","lastModifiedDate":"2022-04-01"},{"lineNumber":308,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":309,"author":{"gitId":"YangShuogeng"},"content":"![Sample Email Screen](images/emailWindow.png)","lastModifiedDate":"2022-04-01"},{"lineNumber":310,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":311,"author":{"gitId":"YangShuogeng"},"content":"Implementation:","lastModifiedDate":"2022-04-01"},{"lineNumber":312,"author":{"gitId":"YangShuogeng"},"content":" ","lastModifiedDate":"2022-04-01"},{"lineNumber":313,"author":{"gitId":"YangShuogeng"},"content":"**_This email feature allowed user to send email to particular group member in the app easily and directly._**","lastModifiedDate":"2022-04-01"},{"lineNumber":314,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":315,"author":{"gitId":"YangShuogeng"},"content":"In the main page of the app, user can type the email command to select the contact and open the email window to prepare email and send email.","lastModifiedDate":"2022-04-01"},{"lineNumber":316,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":317,"author":{"gitId":"YangShuogeng"},"content":"For the current version, the sender email address and password is built in actual gmail for the testing purpose specific for this app only.","lastModifiedDate":"2022-04-01"},{"lineNumber":318,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":319,"author":{"gitId":"YangShuogeng"},"content":"First step: ","lastModifiedDate":"2022-04-01"},{"lineNumber":320,"author":{"gitId":"YangShuogeng"},"content":"* type the command with keyword, `email KEYWORD`. The keyword is the name of the contact that user want to send email to. ","lastModifiedDate":"2022-04-01"},{"lineNumber":321,"author":{"gitId":"YangShuogeng"},"content":"* Once the command entered, email window will be popped out if the contact found as shown above (Sender email is the user\u0027s and the Receiver email is the contact found by the `KEYWORD`). ","lastModifiedDate":"2022-04-01"},{"lineNumber":322,"author":{"gitId":"YangShuogeng"},"content":"* If the contact not found, there will be a message to inform user.","lastModifiedDate":"2022-04-01"},{"lineNumber":323,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":324,"author":{"gitId":"YangShuogeng"},"content":"Second step: ","lastModifiedDate":"2022-04-01"},{"lineNumber":325,"author":{"gitId":"YangShuogeng"},"content":"* Key in subject and email content","lastModifiedDate":"2022-04-01"},{"lineNumber":326,"author":{"gitId":"YangShuogeng"},"content":"* click `button` to send the email ","lastModifiedDate":"2022-04-01"},{"lineNumber":327,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":328,"author":{"gitId":"YangShuogeng"},"content":"The follwoing sequence Diagram shows how this command triggered and work in the system:","lastModifiedDate":"2022-04-01"},{"lineNumber":329,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":330,"author":{"gitId":"YangShuogeng"},"content":"![EmailCommand_Sequence_Diagram](images/EmailCommand_Sequencial_Diagram.png)","lastModifiedDate":"2022-04-01"},{"lineNumber":331,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":332,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":333,"author":{"gitId":"gweeyc"},"content":"### \\[Proposed\\] Attachment of a small digital clock on top left-hand side of TeamContact 24/7","lastModifiedDate":"2022-03-19"},{"lineNumber":334,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":335,"author":{"gitId":"gweeyc"},"content":"Sample Picture:-","lastModifiedDate":"2022-03-19"},{"lineNumber":336,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":337,"author":{"gitId":"gweeyc"},"content":"![Sample Esc key logout Sequence](images/digitalclock.png)","lastModifiedDate":"2022-03-19"},{"lineNumber":338,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":339,"author":{"gitId":"gweeyc"},"content":"_{coming feature}_","lastModifiedDate":"2022-03-19"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"gweeyc"},"content":"* On-the-go Software Project Manager","lastModifiedDate":"2022-02-27"},{"lineNumber":365,"author":{"gitId":"gweeyc"},"content":"* has a need to manage a significant number of contacts on-the-fly","lastModifiedDate":"2022-02-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":369,"author":{"gitId":"gweeyc"},"content":"* prefers to use the CLI - for its quick zoom abilities - to track his communication tasks, logged communications with stakeholders, or do simple housekeeping, throughout his day","lastModifiedDate":"2022-02-25"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"gweeyc"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app, in an error-free and secure manner","lastModifiedDate":"2022-02-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                       | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"gweeyc"},"content":"|----------|--------------------------------------------|------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-02-27"},{"lineNumber":381,"author":{"gitId":"gweeyc"},"content":"| `* * *`  | new user                                   | see or find the usage instructions | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":382,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                   |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"gweeyc"},"content":"| `* * *`  | main Project Communicator                  | log a brief communication note     | have a quick glance at the last intercourse done with contact          |","lastModifiedDate":"2022-02-25"},{"lineNumber":384,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                    | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"YangShuogeng"},"content":"| `* * *`  | user                                       | export contact to txt file         | transfer data to other place                                           |","lastModifiedDate":"2022-04-01"},{"lineNumber":386,"author":{"gitId":"YangShuogeng"},"content":"| `* * *`  | user                                       | find person by tag/information     | find a group of people related                                         |","lastModifiedDate":"2022-02-26"},{"lineNumber":387,"author":{"gitId":"YangShuogeng"},"content":"| `* * *`  | user                                       | find a person by name/partial name | locate details of persons without having to go through the entire list | | `* *`    | user                                       | can send email to specific person  | communicate each other directly            ","lastModifiedDate":"2022-04-01"},{"lineNumber":388,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details       | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"lowyanshuang"},"content":"| `* *`    | user                                       | add a remark on the contact        | note down some information on the contact                              |","lastModifiedDate":"2022-02-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name               | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"gweeyc"},"content":"(For all use cases below, the **System** is the `TeamContact 24/7` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"gweeyc"},"content":"2.  TeamContact 24/7 shows a list of persons","lastModifiedDate":"2022-02-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"gweeyc"},"content":"4.  TeamContact 24/7 deletes the person","lastModifiedDate":"2022-02-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"gweeyc"},"content":"    * 3a1. TeamContact 24/7 shows an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"YangShuogeng"},"content":"**Use case: Email a person**","lastModifiedDate":"2022-04-01"},{"lineNumber":422,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":423,"author":{"gitId":"YangShuogeng"},"content":"**MSS**","lastModifiedDate":"2022-04-01"},{"lineNumber":424,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":425,"author":{"gitId":"YangShuogeng"},"content":"1. User type email command with keyword to request to email a specific person","lastModifiedDate":"2022-04-01"},{"lineNumber":426,"author":{"gitId":"YangShuogeng"},"content":"2. System shows the specific person found message and Email window display","lastModifiedDate":"2022-04-01"},{"lineNumber":427,"author":{"gitId":"YangShuogeng"},"content":"3. User key in email subject and email content and click button to send email","lastModifiedDate":"2022-04-01"},{"lineNumber":428,"author":{"gitId":"YangShuogeng"},"content":"4. System send email and the email window close","lastModifiedDate":"2022-04-01"},{"lineNumber":429,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":430,"author":{"gitId":"YangShuogeng"},"content":"   Use case ends.","lastModifiedDate":"2022-04-01"},{"lineNumber":431,"author":{"gitId":"YangShuogeng"},"content":"   ","lastModifiedDate":"2022-04-01"},{"lineNumber":432,"author":{"gitId":"YangShuogeng"},"content":"**Use case: Add a person**","lastModifiedDate":"2022-04-01"},{"lineNumber":433,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":434,"author":{"gitId":"YangShuogeng"},"content":"**MSS**","lastModifiedDate":"2022-04-01"},{"lineNumber":435,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":436,"author":{"gitId":"YangShuogeng"},"content":"1. User type add command with personal details","lastModifiedDate":"2022-04-01"},{"lineNumber":437,"author":{"gitId":"YangShuogeng"},"content":"2. System add the person to the list and save to json file","lastModifiedDate":"2022-04-01"},{"lineNumber":438,"author":{"gitId":"YangShuogeng"},"content":"3. System shows the person added successful message","lastModifiedDate":"2022-04-01"},{"lineNumber":439,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":440,"author":{"gitId":"YangShuogeng"},"content":"   Use case ends.","lastModifiedDate":"2022-04-01"},{"lineNumber":441,"author":{"gitId":"YangShuogeng"},"content":"   ","lastModifiedDate":"2022-04-01"},{"lineNumber":442,"author":{"gitId":"YangShuogeng"},"content":"**Extension**","lastModifiedDate":"2022-04-01"},{"lineNumber":443,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":444,"author":{"gitId":"YangShuogeng"},"content":"* 1a. Personal details contain: ","lastModifiedDate":"2022-04-01"},{"lineNumber":445,"author":{"gitId":"YangShuogeng"},"content":"    * Name (short-form used: a/)","lastModifiedDate":"2022-04-01"},{"lineNumber":446,"author":{"gitId":"YangShuogeng"},"content":"    * Phone number (short-form used: p/)","lastModifiedDate":"2022-04-01"},{"lineNumber":447,"author":{"gitId":"YangShuogeng"},"content":"    * Address (short-form used: a/)","lastModifiedDate":"2022-04-01"},{"lineNumber":448,"author":{"gitId":"YangShuogeng"},"content":"    * Email (short-form used: e/)","lastModifiedDate":"2022-04-01"},{"lineNumber":449,"author":{"gitId":"YangShuogeng"},"content":"    * Remark (short-form used: r/)","lastModifiedDate":"2022-04-01"},{"lineNumber":450,"author":{"gitId":"YangShuogeng"},"content":"    * Tag (short-form used: t/)","lastModifiedDate":"2022-04-01"},{"lineNumber":451,"author":{"gitId":"YangShuogeng"},"content":"    * Date join (short-form used: d/, formate: DD/MM/YYYY)","lastModifiedDate":"2022-04-01"},{"lineNumber":452,"author":{"gitId":"YangShuogeng"},"content":"    * Gender (short-form used:g/)","lastModifiedDate":"2022-04-01"},{"lineNumber":453,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":454,"author":{"gitId":"YangShuogeng"},"content":"**Use case: Find a person**","lastModifiedDate":"2022-04-01"},{"lineNumber":455,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":456,"author":{"gitId":"YangShuogeng"},"content":"**MSS**","lastModifiedDate":"2022-04-01"},{"lineNumber":457,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":458,"author":{"gitId":"YangShuogeng"},"content":"1. User type find command with KEYWORD","lastModifiedDate":"2022-04-01"},{"lineNumber":459,"author":{"gitId":"YangShuogeng"},"content":"2. System find and match person from the list","lastModifiedDate":"2022-04-01"},{"lineNumber":460,"author":{"gitId":"YangShuogeng"},"content":"3. System shows the find information to user","lastModifiedDate":"2022-04-01"},{"lineNumber":461,"author":{"gitId":"YangShuogeng"},"content":"4. System list out the matched person(s) in the main page","lastModifiedDate":"2022-04-01"},{"lineNumber":462,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":463,"author":{"gitId":"YangShuogeng"},"content":"   Use case ends.","lastModifiedDate":"2022-04-01"},{"lineNumber":464,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":465,"author":{"gitId":"YangShuogeng"},"content":"**Extension**","lastModifiedDate":"2022-04-01"},{"lineNumber":466,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":467,"author":{"gitId":"YangShuogeng"},"content":"* 3a. Find information:","lastModifiedDate":"2022-04-01"},{"lineNumber":468,"author":{"gitId":"YangShuogeng"},"content":"    * If has matched person, shows people found","lastModifiedDate":"2022-04-01"},{"lineNumber":469,"author":{"gitId":"YangShuogeng"},"content":"    * If no matched person, shows no matched person found","lastModifiedDate":"2022-04-01"},{"lineNumber":470,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":471,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"gweeyc"},"content":"4. App is secure to use and protects sensitive date from public view.","lastModifiedDate":"2022-02-27"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"gweeyc"},"content":"* **log**: refers to a brief intercourse update note on a contact entered by Project Manager","lastModifiedDate":"2022-02-27"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gweeyc":85,"thisisdax":9,"lowyanshuang":1,"-":363,"YangShuogeng":81}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"_**TeamContact 24/7**_ is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TeamContact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"2. Download the latest `TeamContact 24-7-v1.4.jar` from the [tp2 Repo GitHub v1.4 release](https://github.com/AY2122S2-TIC4002-F18-5/tp2/releases/tag/v1.4).","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your demo app.","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"4. Double-click the file to start the app. A Login Screen will appear.","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"5. Enter your login data (demo Username usage \u003d \"Java\", sample Password usage \u003d \"123456\").","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"7. The GUI similar to that shown below will appear next. Note how the app contains some sample data and a in-use CLI edit command.\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"8. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/09/08/2011 r/some comments g/male` : Adds a contact named `John Doe` to the TeamContact 24/7 app.","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"   * **`log`**`1 l/some brief communication note` : Logs a brief intercourse update on the 1st contact in the current display list.","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"     * _**NB:-** log is different from remark in the sense that log is for work-related notes only while remark is for all non work-related comments. A log is created via the log Command whereas remark is entered through the \"r/\" arg of add Command._","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Elxyng"},"content":"   * **`sort`** : Sort all contacts.","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"9. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"gweeyc"},"content":"Adds a person to TeamContact 24/7 app.","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"lowyanshuang"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DATE_JOINED r/REMARK g/GENDER [t/TAG]…​`","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"lowyanshuang"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 d/09/01/2022 r/some comments g/male`","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"lowyanshuang"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 d/09/01/2022 r/some comments t/criminal g/female`","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"gweeyc"},"content":"### Logging a brief project work note or communication update : `log`","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"gweeyc"},"content":"Logs a brief project work related memo / intercourse update on a person listed in the TeamContact 24/7 app.","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"gweeyc"},"content":"Format: `log INDEX l/Some brief log note on the contact`","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"gweeyc"},"content":"* Logs a project work brief on the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"gweeyc"},"content":"* Command format must be strictly adhered to, else invalid format exception will be shown instead.","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"gweeyc"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"gweeyc"},"content":"* When entering a log note, the existing log of the person will be removed i.e. adding of logs is not cumulative.","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"gweeyc"},"content":"* You can remove a person’s log note by typing `l/` without","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"gweeyc"},"content":"  specifying any tags after it.","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"gweeyc"},"content":"Examples:","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"gweeyc"},"content":"*  `log 1 l/John informed of Sprint Exercise 01 closure: 3pm YDA.` Logs a communication done the day before with the 1st person.","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"gweeyc"},"content":"*  `log 2 l/to hold meeting with Sponsor Dave: 2pm Fri.` Logs a pending meeting with the 2nd person on display list and clear previous log if it exists.","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"gweeyc"},"content":"Shows a list of all persons in TeamContact 24/7 app.","lastModifiedDate":"2022-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"gweeyc"},"content":"Edits an existing person in TeamContact 24/7 app.","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"lowyanshuang"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/DATE_JOINED] [r/REMARK] [g/GENDER] [t/TAG]…​`","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"gweeyc"},"content":"Deletes the specified person from TeamContact 24/7 app.","lastModifiedDate":"2022-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"gweeyc"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the app.","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"lowyanshuang"},"content":"### Email a person : `email` ","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"YangShuogeng"},"content":"Examples:","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"YangShuogeng"},"content":"* Send email to `Alex Yeoh` --\u003e Key in `email yeoh` as shown below:","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"YangShuogeng"},"content":"![email command](images/emailCommandPic_1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"YangShuogeng"},"content":"* If the name can be found in the list, an email window will be showed as shown below:","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"YangShuogeng"},"content":"![email window](images/emailWindow.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"YangShuogeng"},"content":"* In the main window, the selected contact person\u0027s details will be shown as shown below:","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"YangShuogeng"},"content":"![email command](images/emailCommandPic_2.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"thisisdax"},"content":"### Restore a previous entry : `undo`","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"thisisdax"},"content":" ","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"thisisdax"},"content":"Restores the previous address book state from its history","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"thisisdax"},"content":"Format: `undo`","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"thisisdax"},"content":"### Restore a previously undone entry : `redo`","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"thisisdax"},"content":"Restores a previously undone address book state from its history.","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"thisisdax"},"content":"Format: `redo`","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"Elxyng"},"content":"### Sort by name : `sort`","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"Elxyng"},"content":"Sort all contacts by name in ascending order","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"Elxyng"},"content":"Format: `sort`","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"gweeyc"},"content":"Clears all entries from TeamContact 24/7 app.","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"gweeyc"},"content":"The application data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"gweeyc"},"content":"Program data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-02-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"gweeyc"},"content":"If your changes to the data file makes its format invalid, TeamContact 24/7 app will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"gweeyc"},"content":"### Securing the data file","lastModifiedDate":"2022-04-01"},{"lineNumber":227,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":228,"author":{"gitId":"gweeyc"},"content":"The offline addressbook.json file is not encrypted by any means, it is visually exposed to public viewing,","lastModifiedDate":"2022-04-01"},{"lineNumber":229,"author":{"gitId":"gweeyc"},"content":"so possibly running afoul of PDPA violation or subterfuge if fallen into the wrong hand.","lastModifiedDate":"2022-04-01"},{"lineNumber":230,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":231,"author":{"gitId":"gweeyc"},"content":"We leave it to the user how he/she will want to personally configure or implement the encryption/decryption mechanism part where","lastModifiedDate":"2022-04-01"},{"lineNumber":232,"author":{"gitId":"gweeyc"},"content":"the TeamContact 24/7 will save log, data and setting files in the current working folder, e.g. Windows user can use the","lastModifiedDate":"2022-04-01"},{"lineNumber":233,"author":{"gitId":"gweeyc"},"content":"native Bitlocker or Explorer file/folder encryption features easily, or choose a third party tool like","lastModifiedDate":"2022-04-01"},{"lineNumber":234,"author":{"gitId":"gweeyc"},"content":"[Easy File Locker](https://xoslab.com/efl.html) or [7-zip](https://7ziphelp.com/password-protect-on-7zip) to give","lastModifiedDate":"2022-04-01"},{"lineNumber":235,"author":{"gitId":"gweeyc"},"content":"confidentiality to the folder, or a concerned file.","lastModifiedDate":"2022-04-01"},{"lineNumber":236,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":237,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"gweeyc"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous program home folder.","lastModifiedDate":"2022-02-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"gweeyc"},"content":"| Action     | Format, Examples                                                                                                                                                                                                 |","lastModifiedDate":"2022-02-26"},{"lineNumber":254,"author":{"gitId":"gweeyc"},"content":"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"lowyanshuang"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS d/DATE_JOINED r/REMARKS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 d/09/01/2021 r/gay t/friend t/colleague` |","lastModifiedDate":"2022-03-09"},{"lineNumber":256,"author":{"gitId":"gweeyc"},"content":"| **Log**    | `log INDEX l/note or intercourse update` \u003cbr\u003e e.g., `log 5 l/talked with Team Lead on 1 more coder for Sprint Exercise 2`                                                                                        |","lastModifiedDate":"2022-02-26"},{"lineNumber":257,"author":{"gitId":"gweeyc"},"content":"| **Clear**  | `clear`                                                                                                                                                                                                          |","lastModifiedDate":"2022-02-26"},{"lineNumber":258,"author":{"gitId":"gweeyc"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                              |","lastModifiedDate":"2022-02-26"},{"lineNumber":259,"author":{"gitId":"lowyanshuang"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [d/DATE_JOINED] [r/REMARKS] [g/GENDER] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                               |","lastModifiedDate":"2022-03-09"},{"lineNumber":260,"author":{"gitId":"gweeyc"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                       |","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"gweeyc"},"content":"| **Sort**   | `sort`                                                                                                                                                                                                           |","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"gweeyc"},"content":"| **List**   | `list`                                                                                                                                                                                                           |","lastModifiedDate":"2022-02-26"},{"lineNumber":263,"author":{"gitId":"gweeyc"},"content":"| **Help**   | `help`                                                                                                                                                                                                           |","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Elxyng":7,"gweeyc":57,"thisisdax":12,"lowyanshuang":8,"-":163,"YangShuogeng":16}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"gweeyc"},"content":"    content: \"TeamContact 24/7\";","lastModifiedDate":"2022-02-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"gweeyc":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"title: TeamContact 24/7 App","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"[![CI Status](https://github.com/AY2122S2-TIC4002-F18-5/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-TIC4002-F18-5/tp2/actions)","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-TIC4002-F18-5/tp2/branch/master/graph/badge.svg?token\u003dO32DE4NYXX)](https://codecov.io/gh/AY2122S2-TIC4002-F18-5/tp2)","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"**TeamContact 24/7 is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"* If you are interested in using **TeamContact 24/7 App**, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gweeyc":4,"-":15}},{"path":"docs/team/elxyng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"title: Ng Xin Yi\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":"AddressBook - Level 3 is adesktop app for managing contacts, optimized for use via a Command Line Interface (CLI). It has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"* **New Feature**: Added the ability to find and list all contacts details by team name.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"  * What it does: Allows the user to filter out contacts who are in the same team.","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"  * Justification: This feature improves the product significantly because the user are able to find specific team\u0027s contacts more efficiently.","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"  * Managed releases `v1.2` (1 releases) on GitHub (Upcoming release)","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"    * Update documentation to include `Find the person’s contact or team by any part of the name.` in find function.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"Elxyng"},"content":"    * Update documentation to include `Shows a list of all contact names and contact details (contact name, team name, mobile number, email address) in the list` in list function.","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"Elxyng":25}},{"path":"docs/team/gweeyc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"title: Gwee Yeu Chai\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"### Project: TeamContact 24/7 App","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"TeamContact 24/7 - v1.4 is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) for","lastModifiedDate":"2022-04-02"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"the busy software project Manager. It is written in Java, has a GUI created with JavaFX and has about 10 kLoC.","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"* **New Feature**: Added the ability to log a brief work-related intercourse update or note on a stakeholder contact.","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"    * What it does: allows the user to view at a glance the latest intercourse update with contact.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"    * Justification: This feature improves the product significantly because the Project Manager will know the previous intercourse update done with contact.","lastModifiedDate":"2022-04-02"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    * Highlights: This enhancement is log specific on the latest communication message and status with contact.","lastModifiedDate":"2022-04-02"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"* **Code contributed**: [Ref: RepoSense link](https://nus-tic4002-ay2122s2.github.io/tp-dashboard/?search\u003dgweeyc\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-11\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-04-02"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"    * Managed all releases up to `v1.4` (4 releases) on GitHub","lastModifiedDate":"2022-04-02"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"    * Team Lead functions","lastModifiedDate":"2022-04-02"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"    * Successful setup of the [Team 5 Remote Repo](https://github.com/AY2122S2-TIC4002-F18-5/tp2), with stipulated features added","lastModifiedDate":"2022-04-02"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"    * Work related to renaming the product, changing the product icon and morphing the product into a different looking product","lastModifiedDate":"2022-04-02"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"    * Support team members\u0027 morale and PRs via various verbal checks, encouragement, reviews and merges [#135](https://github.com/AY2122S2-TIC4002-F18-5/tp2/pull/135), [#18](https://github.com/AY2122S2-TIC4002-F18-5/tp2/pull/18), [#64](https://github.com/AY2122S2-TIC4002-F18-5/tp2/pull/64)","lastModifiedDate":"2022-04-02"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    * Wrote additional tests for existing features to increase coverage of additional field remarks.","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    * Did **LogCommandTest**, **LogCommandParserTest** and **LogTest** files (test module folder)","lastModifiedDate":"2022-04-02"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"    * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        * Update documentation to include `log` details and pointers in all the relevant sections.","lastModifiedDate":"2022-04-02"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"        * Added the first six points under Quick start section","lastModifiedDate":"2022-04-02"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"        * Added the \"Securing the data file\" paragraph after Features","lastModifiedDate":"2022-04-02"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"        * Update documentation to include `log` remarks in the User stories section.","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"        * Added the \"Software Security Feature 01\" and \"Software Security Feature 02\" sections","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"    * Forum contributions [#3](https://github.com/nus-tic4002-AY2122s2/forum/issues/3), [#25](https://github.com/nus-tic4002-AY2122s2/forum/issues/25), [#26](https://github.com/nus-tic4002-AY2122s2/forum/issues/26), [#48](https://github.com/nus-tic4002-AY2122s2/forum/issues/48)","lastModifiedDate":"2022-04-02"}],"authorContributionMap":{"gweeyc":41}},{"path":"docs/team/thisisdax.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"title: Tan Wei Hua\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"### Project: TeamContact 24/7","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"TeamContact 24/7 - v1.2 is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI). It has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"* **Code contributed**: [RepoSense link](https://nus-tic4002-ay2122s2.github.io/tp-dashboard/?search\u003dthisisdax\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-11\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dthisisdax\u0026tabRepo\u003dAY2122S2-TIC4002-F18-5%2Ftp2%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"thisisdax":12}},{"path":"docs/team/yangshuogeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"# Yang Shuogeng - Team Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"## Project: ","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"## Overview","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"### Summary of Contributions","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"### Documentation:","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"### Review/Mentoring contributions:","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"YangShuogeng":11}},{"path":"docs/team/yanshuang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"title: Low Yan Shuang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"AddressBook - Level 3 is adesktop app for managing contacts, optimized for use via a Command Line Interface (CLI). It has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":"* **New Feature**: Added the ability to add/edit remarks.","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":"  * What it does: allows the user to enter so notes on the contact.","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"  * Justification: This feature improves the product significantly because there might have some notes that we would like to note down on the contact person.","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"  * Managed releases `v1.2` (1 releases) on GitHub (Upcoming release)","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"  * Wrote additional tests for existing features to increase coverage of additional field remarks.","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"  * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"    * Update documentation to include `remark` in the add and edit functions.","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"    * Update documentation to include `remark` in the add and edit implementions.","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"  * PRs reviewed (with non-trivial review comments)","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"lowyanshuang":32}},{"path":"src/main/java/seedu/address/LoginController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.control.PasswordField;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":" * Sample Skeleton for \u0027Login.fxml\u0027 Controller Class","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"public class LoginController {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    @FXML // fx:id\u003d\"button\"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"    private Button button; // Value injected by FXMLLoader","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"    @FXML // fx:id\u003d\"resetButton\"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"    private Button resetButton; // Value injected by FXMLLoader","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"    @FXML // fx:id\u003d\"textPasswd\"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"    private PasswordField textPasswd; // Value injected by FXMLLoader","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"    @FXML // fx:id\u003d\"textUsername\"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"    private TextField textUsername; // Value injected by FXMLLoader","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    private Label wrongLogin;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"    @FXML","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"    void handleButtonAction(ActionEvent event) {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"        if (event.getSource() \u003d\u003d button) {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"            String username \u003d textUsername.getText().trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"            String password \u003d textPasswd.getText().trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"            if (username.equals(\"Java\") \u0026\u0026 password.equals(\"123456\")) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"                Stage appStage \u003d (Stage) button.getScene().getWindow();","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"                wrongLogin.setText(\"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"                textUsername.clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"                textPasswd.clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"                appStage.close();","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"                MainApp.appStage.show();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"            } else if (username.isEmpty() \u0026\u0026 password.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"                wrongLogin.setText(\"Please enter your User Login data\");","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"            } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"                wrongLogin.setText(\"Wrong username or password combination\");","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"        if (event.getSource() \u003d\u003d resetButton) {","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"            textUsername.setText(\"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"            textPasswd.setText(\"\");","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"    @FXML // This method is called by the FXMLLoader when initialization is complete","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"    void initialize() {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"        assert button !\u003d null : \"fx:id\u003d\\\"button\\\" was not injected: check your FXML file \u0027Login.fxml\u0027.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"        assert textPasswd !\u003d null : \"fx:id\u003d\\\"textPasswd\\\" was not injected: check your FXML file \u0027Login.fxml\u0027.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"        assert textUsername !\u003d null : \"fx:id\u003d\\\"textUsername\\\" was not injected: check your FXML file \u0027Login.fxml\u0027.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"gweeyc":64}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":" * as a named module. We don\u0027t use JavaFX via the module system, so it can\u0027t","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"gweeyc":1,"-":24}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2022-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"    protected static Stage appStage;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"gweeyc"},"content":"        logger.info(\"Starting TeamContact 24/7 \" + MainApp.VERSION);","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"gweeyc"},"content":"        appStage \u003d primaryStage;","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"gweeyc"},"content":"        ui.start(appStage);","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"gweeyc"},"content":"        appStage.hide();","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"gweeyc"},"content":"        SingletonLogin loginScreen \u003d SingletonLogin.getInstance();","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"gweeyc"},"content":"        loginScreen.loginStage.show();","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gweeyc":10,"-":180}},{"path":"src/main/java/seedu/address/SingletonLogin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"public final class SingletonLogin {","lastModifiedDate":"2022-04-03"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"    private static SingletonLogin instance;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"    public final Stage loginStage;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"    private SingletonLogin() {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"        if (instance !\u003d null) {","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"            throw new IllegalStateException();","lastModifiedDate":"2022-04-03"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-04-03"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/Login.fxml\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        Scene scene;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"            scene \u003d new Scene(fxmlLoader.load());","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"        loginStage \u003d new Stage();","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"        loginStage.setTitle(\"Login Screen\");","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"        loginStage.getIcons().add(new Image(\"/ImagesLogin/team.png\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"        loginStage.setScene(scene);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        loginStage.setResizable(false);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"    public static SingletonLogin getInstance() {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"        // makes method thread-safe","lastModifiedDate":"2022-04-03"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"        synchronized (SingletonLogin.class) {","lastModifiedDate":"2022-04-03"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"            if (instance \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"                instance \u003d new SingletonLogin();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"            return instance;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-04-03"}],"authorContributionMap":{"gweeyc":47}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Invalid command\";","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lowyanshuang":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"    CommandResult execute(String commandText) throws ParseException, CommandException;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":49,"YangShuogeng":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_DATEJOINED + \"DATEJOINED \"","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_DATEJOINED + \"15/12/2001 \"","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_REMARK + \"new remarks \"","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"        model.commitAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thisisdax":1,"lowyanshuang":6,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"        model.commitAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thisisdax":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    /** Email Window should be opened to the user. */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    private final boolean showEmailWindow;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"        this.showEmailWindow \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showEmailWindow}","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"    public CommandResult(String feedbackToUser, boolean showEmailWindow) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        this.showEmailWindow \u003d showEmailWindow;","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"        this.exit \u003d false;","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"    public boolean isShowEmailWindow() {","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"        return showEmailWindow;","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"YangShuogeng":19}},{"path":"src/main/java/seedu/address/logic/commands/DateJoinedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":" * Changes the date joined of an existing person in the address book.","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"public class DateJoinedCommand extends Command {","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"    public static final String COMMAND_WORD \u003d \"date joined\";","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the date joined of the person identified \"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"            + \"Existing date joined will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Date Joined: %2$s\";","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"    private final Index index;","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"    private final String dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"     * @param index of the person in the filtered person list to edit the date joined","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"     * @param dateJoined of the person to be updated to","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"    public DateJoinedCommand(Index index, String dateJoined) {","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"        requireAllNonNull(index, dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"        this.dateJoined \u003d dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"lowyanshuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), dateJoined));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"lowyanshuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"lowyanshuang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"lowyanshuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"lowyanshuang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"lowyanshuang"},"content":"        if (!(other instanceof DateJoinedCommand)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"lowyanshuang"},"content":"            return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"lowyanshuang"},"content":"        // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"lowyanshuang"},"content":"        DateJoinedCommand e \u003d (DateJoinedCommand) other;","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"lowyanshuang"},"content":"        return index.equals(e.index) \u0026\u0026 dateJoined.equals(e.dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"lowyanshuang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"lowyanshuang":61}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"        model.commitAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thisisdax":1,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.DateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"            + \"[\" + PREFIX_DATEJOINED + \"DATEJOINED] \"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"lowyanshuang"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"thisisdax"},"content":"        model.commitAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"lowyanshuang"},"content":"        DateJoined updateDateJoined \u003d editPersonDescriptor.getDateJoined().orElse(personToEdit.getDateJoined());","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"lowyanshuang"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2022-02-23"},{"lineNumber":110,"author":{"gitId":"gweeyc"},"content":"        Log updatedLog \u003d personToEdit.getLog(); // edit command does not allow editing remarks","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"lowyanshuang"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"gweeyc"},"content":"                updateDateJoined, updatedRemark, updatedLog, updatedTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"lowyanshuang"},"content":"        private DateJoined dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"lowyanshuang"},"content":"        private Remark remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"lowyanshuang"},"content":"            setDateJoined(toCopy.dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":160,"author":{"gitId":"lowyanshuang"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2022-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"lowyanshuang"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, dateJoined, remark, tags);","lastModifiedDate":"2022-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"lowyanshuang"},"content":"        public void setDateJoined(DateJoined dateJoined) {","lastModifiedDate":"2022-03-07"},{"lineNumber":204,"author":{"gitId":"lowyanshuang"},"content":"            this.dateJoined \u003d dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":205,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":206,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":207,"author":{"gitId":"lowyanshuang"},"content":"        public Optional\u003cDateJoined\u003e getDateJoined() {","lastModifiedDate":"2022-03-07"},{"lineNumber":208,"author":{"gitId":"lowyanshuang"},"content":"            return Optional.ofNullable(dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":209,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":210,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":211,"author":{"gitId":"lowyanshuang"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2022-02-23"},{"lineNumber":212,"author":{"gitId":"lowyanshuang"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":213,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":214,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":215,"author":{"gitId":"lowyanshuang"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2022-02-23"},{"lineNumber":216,"author":{"gitId":"lowyanshuang"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2022-02-23"},{"lineNumber":217,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":218,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"lowyanshuang"},"content":"                    \u0026\u0026 getDateJoined().equals(e.getDateJoined())","lastModifiedDate":"2022-03-07"},{"lineNumber":256,"author":{"gitId":"lowyanshuang"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2022-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"gweeyc":3,"thisisdax":1,"lowyanshuang":32,"-":224}},{"path":"src/main/java/seedu/address/logic/commands/EmailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.ui.email.EmailWindow;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"public class EmailCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    public static final String COMMAND_WORD \u003d \"email\";","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Send email to specific person.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"            + \"Parameter: KEYWORD\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"            + \"Example: \" + COMMAND_WORD + \" Mich\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    private static ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"    public EmailCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"        personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"        if (personList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"        String fromEmailAddress \u003d personList.get(0).getEmail().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"        EmailWindow emailWindow \u003d new EmailWindow(\"tic4003tp5@gmail.com\", \"nusyear4\", fromEmailAddress);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"        emailWindow.show();","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        return new CommandResult(\"Person found.\", true);","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"YangShuogeng":48}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Data exported successfully.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    public static final String MESSAGE_EMPTY \u003d \"No person recorded in the system.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"    private final Path rootPath \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    private final Path txtStoragePath \u003d Paths.get(rootPath + \"/data\");","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"    private ObservableList\u003cPerson\u003e pLst;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"    public ExportCommand() {}","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"        this.pLst \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"        String inforToTxt \u003d \"\";","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"        for (int i \u003d 0; i \u003c pLst.size(); i++) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"            String userInfo \u003d \"Name: \" + pLst.get(i).getName() + \"\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Phone: \" + pLst.get(i).getPhone() + \"\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Email: \" + pLst.get(i).getEmail() + \"\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Date Joined: \" + pLst.get(i).getDateJoined() + \"\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Address: \" + pLst.get(i).getAddress() + \"\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Remark: \" + pLst.get(i).getRemark() + \"\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Tag(s): \" + pLst.get(i).getTags().toString() + \"\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"                             + \"Log: \" + pLst.get(i).getLog().toString()","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"                             + \"\\n\\n\";","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"            inforToTxt +\u003d userInfo;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"        if (inforToTxt.equals(\"\")) {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"            return new CommandResult(MESSAGE_EMPTY);","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"        StorageManager.exportAddressBookToTxt(inforToTxt, txtStoragePath);","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"YangShuogeng":56}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All people are listed\";","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lowyanshuang":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/LogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOG;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"public class LogCommand extends Command {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"    public static final String COMMAND_WORD \u003d \"log\";","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the log of the person identified \"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"            + \"Existing log will be overwritten by the input.\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"            + PREFIX_LOG + \"[LOG]\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"            + PREFIX_LOG + \"Informed of start of next Sprint02 next Tues.\";","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"    public static final String MESSAGE_ADD_LOG_SUCCESS \u003d \"Added log to Person: %1$s\";","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"    public static final String MESSAGE_DELETE_LOG_SUCCESS \u003d \"Removed log from Person: %1$s\";","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    private final Index index;","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    private final Log log;","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"     * @param log of the person to be updated to","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"    public LogCommand(Index index, Log log) {","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"        requireAllNonNull(index, log);","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"        this.log \u003d log;","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"                personToEdit.getAddress(), personToEdit.getDateJoined(), personToEdit.getRemark(), log,","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"                personToEdit.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"gweeyc"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"gweeyc"},"content":"        String message \u003d !log.value.isEmpty() ? MESSAGE_ADD_LOG_SUCCESS : MESSAGE_DELETE_LOG_SUCCESS;","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"gweeyc"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"gweeyc"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"gweeyc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"gweeyc"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"gweeyc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"gweeyc"},"content":"        if (!(other instanceof LogCommand)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"gweeyc"},"content":"            return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"gweeyc"},"content":"        // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"gweeyc"},"content":"        LogCommand e \u003d (LogCommand) other;","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"gweeyc"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"gweeyc"},"content":"                \u0026\u0026 log.equals(e.log);","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"gweeyc":89}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":" * Restores a previously undone address book state from its history.","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"        + \":  Restores a previously undone address book state from its history.\\n Example: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        + COMMAND_WORD;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    public static final String REDO_COMMAND_SUCCESS \u003d \"Successfully restored previously undone address book state.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    public static final String REDO_COMMAND_FAILED \u003d \"No previous address book state to restore.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        assert model !\u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        if (model.redoAddressBook()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"            return new CommandResult(REDO_COMMAND_SUCCESS);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"        throw new CommandException(REDO_COMMAND_FAILED);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"thisisdax":30}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"    private final Index index;","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"    private final String remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"lowyanshuang"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"lowyanshuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"lowyanshuang"},"content":"        // short circuit if same object","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"lowyanshuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"lowyanshuang"},"content":"            return true;","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"lowyanshuang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"lowyanshuang"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"lowyanshuang"},"content":"            return false;","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"lowyanshuang"},"content":"        // state check","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"lowyanshuang"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"lowyanshuang"},"content":"        return index.equals(e.index) \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"lowyanshuang"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"lowyanshuang":60}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Elxyng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"Elxyng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Elxyng"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"Elxyng"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Elxyng"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"Elxyng"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The list has sorted\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Elxyng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"Elxyng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"Elxyng"},"content":"        model.sortAddressBook();","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"Elxyng"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"Elxyng"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Elxyng":23,"lowyanshuang":1}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":" * Restores the previous address book state from its history","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"        + \":  Restores the previous address book state from its history.\\n Example: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"        + COMMAND_WORD;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"    public static final String UNDO_COMMAND_SUCCESS \u003d \"Successfully restored previous address book state.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    public static final String UNDO_COMMAND_FAILED \u003d \"No previous address book state to restore.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"        assert model !\u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        if (model.undoAddressBook()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"            return new CommandResult(UNDO_COMMAND_SUCCESS);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"        throw new CommandException(UNDO_COMMAND_FAILED);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"thisisdax":30}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.DateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"                        PREFIX_ADDRESS, PREFIX_DATEJOINED, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_DATEJOINED, PREFIX_REMARK,","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"lowyanshuang"},"content":"                PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"        Log log \u003d new Log(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"lowyanshuang"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"lowyanshuang"},"content":"        DateJoined dateJoined \u003d ParserUtil.parseDateJoined(argMultimap.getValue(PREFIX_DATEJOINED).get());","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"        Person person \u003d new Person(name, phone, email, address, dateJoined, remark, log, tagList);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"gweeyc":3,"lowyanshuang":10,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.DateJoinedCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.EmailCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.LogCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"        case LogCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"gweeyc"},"content":"            return new LogCommandParser().parse(arguments);","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"lowyanshuang"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"lowyanshuang"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2022-02-23"},{"lineNumber":84,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"lowyanshuang"},"content":"        case DateJoinedCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"lowyanshuang"},"content":"            return new DateJoinedCommandParser().parse(arguments);","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"YangShuogeng"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"YangShuogeng"},"content":"            return new ExportCommand();","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"thisisdax"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"thisisdax"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"thisisdax"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"thisisdax"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"Elxyng"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"Elxyng"},"content":"            return new SortCommand();","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"        case EmailCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"YangShuogeng"},"content":"            return new EmailCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Elxyng":3,"gweeyc":3,"thisisdax":6,"lowyanshuang":6,"-":75,"YangShuogeng":14}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"    public static final Prefix PREFIX_LOG \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"    public static final Prefix PREFIX_DATEJOINED \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"gweeyc":1,"lowyanshuang":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DateJoinedCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.logic.commands.DateJoinedCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":" * Parses input arguments and creates a new {@code DateJoinedCommand} object","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"public class DateJoinedCommandParser implements Parser\u003cDateJoinedCommand\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DateJoinedCommand}","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"     * and returns a {@code DateJoinedCommand} object for execution.","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"    public DateJoinedCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATEJOINED);","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"        Index index;","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"                    DateJoinedCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"        String dateJoined \u003d argMultimap.getValue(PREFIX_DATEJOINED).orElse(\"\");","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"        return new DateJoinedCommand(index, dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"lowyanshuang":37}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"                PREFIX_ADDRESS, PREFIX_DATEJOINED, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"lowyanshuang"},"content":"        if (argMultimap.getValue(PREFIX_DATEJOINED).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"lowyanshuang"},"content":"            editPersonDescriptor.setDateJoined(","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"lowyanshuang"},"content":"                    ParserUtil.parseDateJoined(argMultimap.getValue(PREFIX_DATEJOINED).get()));","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"lowyanshuang"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"lowyanshuang"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2022-02-23"},{"lineNumber":66,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lowyanshuang":11,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/EmailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.EmailCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"public class EmailCommandParser implements Parser\u003cEmailCommand\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    public EmailCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"        if (nameKeywords.length \u003e 1) {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EmailCommand.MESSAGE_USAGE)","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"            );","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"        return new EmailCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"YangShuogeng":32}},{"path":"src/main/java/seedu/address/logic/parser/LogCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOG;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import seedu.address.logic.commands.LogCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":" * Parses input arguments and creates a new {@code LogCommand} object","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"public class LogCommandParser implements Parser\u003cLogCommand\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code LogCommand}","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"     * and returns a {@code LogCommand} object for execution.","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"    public LogCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LOG);","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"        Index index;","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        String log \u003d argMultimap.getValue(PREFIX_LOG).orElse(\"\");","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"        return new LogCommand(index, new Log(log));","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"gweeyc":37}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.DateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":101,"author":{"gitId":"lowyanshuang"},"content":"     * Parses a {@code String dateJoined} into an {@code dateJoined}.","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"lowyanshuang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"lowyanshuang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"lowyanshuang"},"content":"     * @throws ParseException if the given {@code dateJoined} is invalid.","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"lowyanshuang"},"content":"    public static DateJoined parseDateJoined(String dateJoined) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"lowyanshuang"},"content":"        requireNonNull(dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"lowyanshuang"},"content":"        String trimmedDateJoined \u003d dateJoined.trim();","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"lowyanshuang"},"content":"        if (!DateJoined.isValidDateJoined(trimmedDateJoined)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"lowyanshuang"},"content":"            throw new ParseException(DateJoined.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"lowyanshuang"},"content":"        return new DateJoined(dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"lowyanshuang"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"lowyanshuang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-23"},{"lineNumber":118,"author":{"gitId":"lowyanshuang"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":119,"author":{"gitId":"lowyanshuang"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":120,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":121,"author":{"gitId":"lowyanshuang"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2022-02-23"},{"lineNumber":122,"author":{"gitId":"lowyanshuang"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-02-23"},{"lineNumber":123,"author":{"gitId":"lowyanshuang"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2022-02-23"},{"lineNumber":124,"author":{"gitId":"lowyanshuang"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2022-02-23"},{"lineNumber":125,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":126,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lowyanshuang":29,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":"/**","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":" */","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"        Index index;","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"        try {","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"lowyanshuang":36}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Elxyng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Elxyng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"Elxyng"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"Elxyng"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"Elxyng"},"content":"     * Sort person name list {@code persons} in ascending order.","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"Elxyng"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"Elxyng"},"content":"    public void sort(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"Elxyng"},"content":"        List\u003cPerson\u003e sortedPersonNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"Elxyng"},"content":"        sortedPersonNames.addAll(persons);","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"Elxyng"},"content":"        Collections.sort(sortedPersonNames, new Comparator\u003cPerson\u003e() {","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"Elxyng"},"content":"            public int compare(Person p1, Person p2) {","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"Elxyng"},"content":"                String personNameFirst \u003d p1.getName().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"Elxyng"},"content":"                String personNameSecond \u003d p2.getName().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"Elxyng"},"content":"                // ascending order","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"Elxyng"},"content":"                return personNameFirst.compareTo(","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"Elxyng"},"content":"                        personNameSecond);","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"Elxyng"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"Elxyng"},"content":"        });","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"Elxyng"},"content":"        this.persons.setPersons(sortedPersonNames);","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Elxyng":25,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"thisisdax"},"content":"     * Commits the latest AddressBook state.","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"thisisdax"},"content":"    void commitAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"thisisdax"},"content":"     * Undo the latest commit stored in history.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"thisisdax"},"content":"     * Returns true if there is a commit to undo. AddressBook state must have a previous state to undo.","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"thisisdax"},"content":"    boolean undoAddressBook();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"thisisdax"},"content":"     * Redo the previous state.","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"thisisdax"},"content":"     * Returns true if there is a commit to redo. AddressBook state must have a previous undone state to redo.","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"thisisdax"},"content":"    boolean redoAddressBook();","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"Elxyng"},"content":"    void sortAddressBook();","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Elxyng":2,"thisisdax":17,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"    private final VersionedAddressBook addressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"        this(new VersionedAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"thisisdax"},"content":"    public void commitAddressBook(ReadOnlyAddressBook toBeCommitted) {","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"thisisdax"},"content":"        addressBook.commit(toBeCommitted);","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"thisisdax"},"content":"    public boolean undoAddressBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"thisisdax"},"content":"        return addressBook.undo();","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"thisisdax"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"thisisdax"},"content":"    public boolean redoAddressBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"thisisdax"},"content":"        return addressBook.redo();","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"Elxyng"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"Elxyng"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"Elxyng"},"content":"    public void sortAddressBook() {","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"Elxyng"},"content":"        addressBook.sort(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"Elxyng"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Elxyng":5,"thisisdax":17,"-":147}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thisisdax"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"thisisdax"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"thisisdax"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"thisisdax"},"content":" * Advanced version of AddressBook which includes commit, undo and redo feature.","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"thisisdax"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"thisisdax"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"thisisdax"},"content":"    private ArrayList\u003cAddressBook\u003e addressBookStateList;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"thisisdax"},"content":"    private int currentStatePointer;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"thisisdax"},"content":"     * Initializes a VersionedAddressBook with the initialData provided.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"thisisdax"},"content":"    public VersionedAddressBook() {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"thisisdax"},"content":"        super();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"thisisdax"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"thisisdax"},"content":"     * Initializes a VersionedAddressBook with the provided ReadOnlyAddressBook argument.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"thisisdax"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"thisisdax"},"content":"        super(toBeCopied);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"thisisdax"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"thisisdax"},"content":"        AddressBook newCopy \u003d new AddressBook(toBeCopied);","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"thisisdax"},"content":"        this.addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"thisisdax"},"content":"        this.addressBookStateList.add(newCopy);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"thisisdax"},"content":"     * Commits the latest AddressBook state to a list.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"thisisdax"},"content":"    public void commit(ReadOnlyAddressBook toBeCommitted) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"thisisdax"},"content":"        this.addressBookStateList.add(new AddressBook(toBeCommitted));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"thisisdax"},"content":"        this.currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"thisisdax"},"content":"        this.addressBookStateList.subList(this.currentStatePointer + 1, this.addressBookStateList.size());","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"thisisdax"},"content":"     * Undo the latest commit stored in history.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"thisisdax"},"content":"     * Returns true if there is a commit to undo.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"thisisdax"},"content":"    public boolean undo() {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"thisisdax"},"content":"        if (currentStatePointer \u003d\u003d 0) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"thisisdax"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"thisisdax"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"thisisdax"},"content":"            super.resetData(this.addressBookStateList.get(this.currentStatePointer - 1));","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"thisisdax"},"content":"            this.currentStatePointer -\u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"thisisdax"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"thisisdax"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"thisisdax"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"thisisdax"},"content":"     * Restores a previously undone address book state history.","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"thisisdax"},"content":"     * Returns true of there is a commit to redo.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"thisisdax"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"thisisdax"},"content":"    public boolean redo() {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"thisisdax"},"content":"        if (this.currentStatePointer \u003d\u003d this.addressBookStateList.size() - 1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"thisisdax"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"thisisdax"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"thisisdax"},"content":"            super.resetData(this.addressBookStateList.get(this.currentStatePointer + 1));","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"thisisdax"},"content":"            this.currentStatePointer +\u003d 1;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"thisisdax"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"thisisdax"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"thisisdax"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"thisisdax"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"thisisdax":67}},{"path":"src/main/java/seedu/address/model/person/DateJoined.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"public class DateJoined {","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Only accept valid date in dd/mm/yyyy format\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(((([1-9])|([0-2][0-9])|(3[01]))[\\\\/]((0[13578])|\"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"            + \"([13578])|(1[02])))|((([1-9])|([0-2][0-9])|(30))[\\\\/]((0[469])|([469])|(11)))|((([1-9])|\"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"            + \"([0-2][0-9]))[\\\\/](2|02)))[\\\\/]\\\\d{4}$|^\\\\d{4}$\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"    public final String value;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"     * Constructs an {@code dateJoined}.","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"     * @param dateJoined","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"    public DateJoined(String dateJoined) {","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"        requireNonNull(dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"        checkArgument(isValidDateJoined(dateJoined), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"        value \u003d dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"    public static boolean isValidDateJoined(String test) {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"lowyanshuang"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"        return value;","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"lowyanshuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"lowyanshuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"lowyanshuang"},"content":"                || (other instanceof DateJoined // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"lowyanshuang"},"content":"                \u0026\u0026 value.equals(((DateJoined) other).value)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"lowyanshuang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"lowyanshuang"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"lowyanshuang"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"lowyanshuang":53}},{"path":"src/main/java/seedu/address/model/person/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":" * Represents a Person\u0027s log in the address book.","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"public class Log {","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"    public final String value;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"     * Log constructor","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"     * @param remark Brief logging update","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"    public Log(String remark) {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"        value \u003d remark;","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        return value;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"                || (other instanceof Log // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"                \u0026\u0026 value.equals(((Log) other).value)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"gweeyc":33}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"    private final DateJoined dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"    private final Remark remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"    private final Log log;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"                  DateJoined dateJoined, Remark remark, Log log, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"        requireAllNonNull(name, phone, email, address, dateJoined, remark, log, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"lowyanshuang"},"content":"        this.dateJoined \u003d dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"        this.log \u003d log;","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"lowyanshuang"},"content":"    public DateJoined getDateJoined() {","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"lowyanshuang"},"content":"        return dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"lowyanshuang"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"lowyanshuang"},"content":"        return remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"gweeyc"},"content":"    public Log getLog() {","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"        return log;","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"lowyanshuang"},"content":"                \u0026\u0026 otherPerson.getDateJoined().equals(getDateJoined())","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"lowyanshuang"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2022-02-23"},{"lineNumber":117,"author":{"gitId":"gweeyc"},"content":"                \u0026\u0026 otherPerson.getLog().equals(getLog())","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"gweeyc"},"content":"        return Objects.hash(name, phone, email, address, dateJoined, remark, log, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"lowyanshuang"},"content":"                .append(getAddress())","lastModifiedDate":"2022-02-23"},{"lineNumber":137,"author":{"gitId":"lowyanshuang"},"content":"                .append(\" Date Joined: \")","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"lowyanshuang"},"content":"                .append(getDateJoined())","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"lowyanshuang"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"gweeyc"},"content":"                .append(getRemark())","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"gweeyc"},"content":"                .append(\"; Log: \")","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"gweeyc"},"content":"                .append(getLog());","lastModifiedDate":"2022-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gweeyc":14,"lowyanshuang":19,"-":117}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowyanshuang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"lowyanshuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"lowyanshuang"},"content":"/**","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":" */","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"lowyanshuang"},"content":"public class Remark {","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"    public final String value;","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":"     * Doubles the value.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"     * The long and detailed explanation what the method does.","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"lowyanshuang"},"content":"     *","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"     * @param value for doubling.","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"lowyanshuang"},"content":"     * @return double value.","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"lowyanshuang"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"        value \u003d remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"lowyanshuang"},"content":"    public String toString() {","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"        return value;","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"    @Override","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"lowyanshuang"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"}","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"lowyanshuang":40}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.DateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"lowyanshuang"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"    public static final Log EMPTY_LOG \u003d new Log(\"\");","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"lowyanshuang"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new DateJoined(\"05/02/2013\"),","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"                    EMPTY_REMARK, EMPTY_LOG, getTagSet(\"friends\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new DateJoined(\"05/08/2003\"),","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"                    EMPTY_REMARK, EMPTY_LOG, getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new DateJoined(\"12/02/2013\"),","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"                    EMPTY_REMARK, EMPTY_LOG, getTagSet(\"neighbours\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new DateJoined(\"15/12/2013\"),","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"                    EMPTY_REMARK, EMPTY_LOG, getTagSet(\"family\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new DateJoined(\"12/05/1999\"),","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"                    EMPTY_REMARK, EMPTY_LOG, getTagSet(\"classmates\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"lowyanshuang"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new DateJoined(\"05/02/2013\"),","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"                    EMPTY_REMARK, EMPTY_LOG, getTagSet(\"colleagues\"))","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"gweeyc":8,"lowyanshuang":11,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.DateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"    private final String dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"    private final String remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"    private final String log;","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"lowyanshuang"},"content":"                             @JsonProperty(\"dateJoined\") String dateJoined, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"                             @JsonProperty(\"log\") String log, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"lowyanshuang"},"content":"        this.dateJoined \u003d dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"lowyanshuang"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"        this.log \u003d log;","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"lowyanshuang"},"content":"        dateJoined \u003d source.getDateJoined().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"lowyanshuang"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-02-23"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"        log \u003d source.getLog().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"lowyanshuang"},"content":"        if (dateJoined \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"lowyanshuang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"lowyanshuang"},"content":"                    DateJoined.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"lowyanshuang"},"content":"        if (!DateJoined.isValidDateJoined(dateJoined)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"lowyanshuang"},"content":"            throw new IllegalValueException(DateJoined.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"lowyanshuang"},"content":"        final DateJoined modelDateJoined \u003d new DateJoined(dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":128,"author":{"gitId":"lowyanshuang"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-02-23"},{"lineNumber":129,"author":{"gitId":"gweeyc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":130,"author":{"gitId":"lowyanshuang"},"content":"        }","lastModifiedDate":"2022-02-23"},{"lineNumber":131,"author":{"gitId":"lowyanshuang"},"content":"        final Remark modelRemark \u003d new Remark(remark); //TODO: Implement parsing and marshalling in the storage commit.","lastModifiedDate":"2022-02-23"},{"lineNumber":132,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"gweeyc"},"content":"        if (log \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"gweeyc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Log.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":135,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"gweeyc"},"content":"        final Log modelLog \u003d new Log(log);","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"gweeyc"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelDateJoined, modelRemark, modelLog,","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"gweeyc"},"content":"                modelTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gweeyc":15,"lowyanshuang":22,"-":106}},{"path":"src/main/java/seedu/address/storage/PersonDetailsExportationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.io.File;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"public class PersonDetailsExportationManager {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PersonDetailsExportationManager.class);","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"    private String personDetails;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"    private String fileName \u003d \"/personDetails.txt\";","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"     * Constructor","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"     * @param filePath is the local storage file path","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"     * @param personDetails is all the person details in String type","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"    public PersonDetailsExportationManager(Path filePath, String personDetails) {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"        this.personDetails \u003d personDetails;","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"     * To check whether the personDetails.txt exist in the target filePath","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"     * @return true if the txt file exist or false if the txt file not exist","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"    private boolean fileDoExist() {","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"        return Files.exists(Paths.get(String.valueOf(filePath) + fileName));","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"     * To start export all the perons\u0027 details information to local storage","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"    public void exportToTxtFile() {","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"        if (!fileDoExist()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"            try {","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"                File newFile \u003d new File(\"data/personDetails.txt\");","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"                newFile.createNewFile();","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"                logger.info(\"------------File created!---------------\");","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"        toSavePersonDetailsToLocal(personDetails);","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"     * The function to achieve saving person details to local storage","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"     * @param personD entire person details","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"    private void toSavePersonDetailsToLocal(String personD) {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"        if (personD.equals(\"\")) {","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"            return;","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"            //To clear content of existing txt file","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"            FileWriter fw \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"            FileWriter newFw \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"YangShuogeng"},"content":"            fw \u003d new FileWriter(String.valueOf(filePath) + fileName);","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"YangShuogeng"},"content":"            fw.write(\"\");","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"YangShuogeng"},"content":"            fw.close();","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"YangShuogeng"},"content":"            //Start writing Task(s) in Vector\u003cString\u003e list into the new txt file","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"YangShuogeng"},"content":"            newFw \u003d new FileWriter(String.valueOf(filePath) + fileName, true);","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"YangShuogeng"},"content":"            newFw.write(personD);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"            newFw.close();","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"YangShuogeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"YangShuogeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"YangShuogeng":84}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"     * To call the function to save all the persons\u0027 details to local storage","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"YangShuogeng"},"content":"     * @param personInfo is all the person details","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"YangShuogeng"},"content":"     * @param filePath is the local storage file path which used to save all the persons\u0027 details","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"    public static void exportAddressBookToTxt(String personInfo, Path filePath) {","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":"        logger.fine(\"Attempting to write to local txt file: \" + filePath);","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"YangShuogeng"},"content":"        logger.info(\"Attempting to write to local txt file: \" + filePath);","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"YangShuogeng"},"content":"        PersonDetailsExportationManager pdeManager \u003d new PersonDetailsExportationManager(filePath, personInfo);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"YangShuogeng"},"content":"        pdeManager.exportToTxtFile();","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"YangShuogeng":14}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-tic4002-f18-5.github.io/tp2/UserGuide.html\";","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gweeyc":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"import seedu.address.SingletonLogin;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"    private Scene screen;","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"gweeyc"},"content":"     * Signs out of main App and shows the loginScreen stage (only on ESC key pressed).","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"gweeyc"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"gweeyc"},"content":"    public void keyPressedHandle(KeyEvent event) {","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"gweeyc"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"gweeyc"},"content":"            primaryStage.hide();","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"gweeyc"},"content":"            SingletonLogin.getInstance().loginStage.show();","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"gweeyc"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"YangShuogeng"},"content":"    private CommandResult executeCommand(String commandText) throws ParseException, CommandException {","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"YangShuogeng"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2022-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gweeyc":18,"-":194,"YangShuogeng":2}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"    @FXML","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"    private Label log;","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"lowyanshuang"},"content":"    @FXML","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"lowyanshuang"},"content":"    private Label dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"    @FXML","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"lowyanshuang"},"content":"    private Label remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"lowyanshuang"},"content":"        dateJoined.setText(person.getDateJoined().value);","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"lowyanshuang"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2022-02-23"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"        log.setText(person.getLog().value);","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"gweeyc":5,"lowyanshuang":6,"-":77}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"    private final Logic logic;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"            // mainWindow.show(); //This should be called before creating other UI parts (in original version only)","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"        return new Image(Objects.requireNonNull(MainApp.class.getResourceAsStream(imagePath)));","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gweeyc":4,"-":84}},{"path":"src/main/java/seedu/address/ui/email/EmailWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package seedu.address.ui.email;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"public class EmailWindow {","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"    public final Stage emailWindowStage;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"    private final Scene scene;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"    private FXMLLoader loader;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"     * Creates a {@code EmailWindow} with the given parameters:","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"     * @param from is the sender email address","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"     * @param password is the sender email address\u0027s password","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"     * @param to is the receiver\u0027s email address","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    public EmailWindow(String from, String password, String to) {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"        this.emailWindowStage \u003d new Stage();","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"            this.loader \u003d new FXMLLoader(getClass().getResource(\"/view/emailWindow.fxml\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"            scene \u003d new Scene(this.loader.load());","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"        emailWindowStage.setTitle(\"Email Window\");","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"        emailWindowStage.setScene(scene);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"        EmailWindowController controller \u003d loader.getController();","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"        controller.initData(from, password, to);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"     * Showes the email window","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"    public void show() {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"        emailWindowStage.show();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"YangShuogeng":43}},{"path":"src/main/java/seedu/address/ui/email/EmailWindowController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package seedu.address.ui.email;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Properties;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.Authenticator;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.Message;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.MessagingException;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.PasswordAuthentication;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.Session;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.Transport;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.internet.InternetAddress;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"import javax.mail.internet.MimeMessage;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"public class EmailWindowController {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EmailWindowController.class);","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"    private String password;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"    private String from;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    private String to;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"    private Button sendButton;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"    private Label senderEmailAddress;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"    private Label receiverEmailAddress;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"    private TextField subjectTestField;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"    private TextArea emailContentArea;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"    void handleButtonAction(ActionEvent event) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"        if (event.getSource() \u003d\u003d sendButton) {","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"            String subject \u003d subjectTestField.getText();","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"            String content \u003d emailContentArea.getText();","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"            sendEmail(subject, content);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"    void initData(String from, String password, String to) {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"        senderEmailAddress.setText(from);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"        receiverEmailAddress.setText(to);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"        this.password \u003d password;","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"        this.from \u003d from;","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"        this.to \u003d to;","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"    private void sendEmail(String subject, String content) {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"        Properties properties \u003d new Properties();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"        properties.put(\"mail.smtp.auth\", \"true\");","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"        properties.put(\"mail.smtp.starttls.enable\", \"true\");","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"        properties.put(\"mail.smtp.host\", \"smtp.gmail.com\");","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"        properties.put(\"mail.smtp.port\", \"587\");","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"        Session session \u003d Session.getInstance(properties, new Authenticator() {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"            @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"YangShuogeng"},"content":"            protected PasswordAuthentication getPasswordAuthentication() {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"YangShuogeng"},"content":"                return new PasswordAuthentication(from, password);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"YangShuogeng"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"        });","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"YangShuogeng"},"content":"        Message message \u003d prepareMessage(session, from, to, subject, content);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"            Transport.send(message);","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"YangShuogeng"},"content":"        } catch (MessagingException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"YangShuogeng"},"content":"            logger.info(\" -------- Email Send Process Failed -------- \");","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"YangShuogeng"},"content":"    private Message prepareMessage(Session session, String sender,","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"YangShuogeng"},"content":"                                          String receiver, String subject,","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"YangShuogeng"},"content":"                                          String content) {","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"YangShuogeng"},"content":"        MimeMessage mimeMessage \u003d new MimeMessage(session);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"YangShuogeng"},"content":"            // Create Email","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"YangShuogeng"},"content":"            mimeMessage.setFrom(new InternetAddress(sender));","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"YangShuogeng"},"content":"            mimeMessage.addRecipient(MimeMessage.RecipientType.TO, new InternetAddress(receiver));","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"YangShuogeng"},"content":"            mimeMessage.setSubject(subject);","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"YangShuogeng"},"content":"            mimeMessage.setText(content);","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"YangShuogeng"},"content":"            return mimeMessage;","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"YangShuogeng"},"content":"        } catch (MessagingException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"YangShuogeng"},"content":"            logger.info(\" -------- Email Prepare Process Failed -------- \");","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"YangShuogeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"YangShuogeng"},"content":"        return mimeMessage;","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"YangShuogeng":109}},{"path":"src/main/resources/view/Login.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.control.PasswordField?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" style\u003d\"-fx-background-color: #1d1d1d;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.address.LoginController\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"        \u003cButton fx:id\u003d\"button\" layoutX\u003d\"274.0\" layoutY\u003d\"337.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleButtonAction\" prefHeight\u003d\"32.0\" prefWidth\u003d\"93.0\" style\u003d\"-fx-background-color: #0598ff;\" text\u003d\"Login\" textFill\u003d\"#fffafa\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"                \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"            \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"        \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"193.0\" layoutY\u003d\"178.0\" prefHeight\u003d\"26.0\" prefWidth\u003d\"63.0\" text\u003d\"Login\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"        \u003cTextField fx:id\u003d\"textUsername\" layoutX\u003d\"126.0\" layoutY\u003d\"245.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"235.0\" promptText\u003d\"Username\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"        \u003cPasswordField fx:id\u003d\"textPasswd\" layoutX\u003d\"126.0\" layoutY\u003d\"287.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"235.0\" promptText\u003d\"Password\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"        \u003cLabel layoutX\u003d\"48.0\" layoutY\u003d\"251.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"63.0\" text\u003d\"Username\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"        \u003cLabel layoutX\u003d\"48.0\" layoutY\u003d\"293.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"63.0\" text\u003d\"Password\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        \u003cImageView fitHeight\u003d\"70.0\" fitWidth\u003d\"71.0\" layoutX\u003d\"189.0\" layoutY\u003d\"33.0\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"                \u003cImage url\u003d\"@../ImagesLogin/pngegg.png\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"        \u003cImageView fitHeight\u003d\"32.0\" fitWidth\u003d\"34.0\" layoutX\u003d\"208.0\" layoutY\u003d\"135.0\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"                \u003cImage url\u003d\"@../ImagesLogin/lock.png\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"        \u003cImageView fitHeight\u003d\"175.0\" fitWidth\u003d\"135.0\" layoutX\u003d\"294.0\" layoutY\u003d\"16.0\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"                \u003cImage url\u003d\"@../ImagesLogin/contact-img-blue.png\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"        \u003cImageView fitHeight\u003d\"26.0\" fitWidth\u003d\"112.0\" layoutX\u003d\"168.0\" layoutY\u003d\"498.0\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"                \u003cImage url\u003d\"@../ImagesLogin/AB3.png\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"        \u003cImageView fitHeight\u003d\"45.0\" fitWidth\u003d\"270.0\" layoutX\u003d\"90.0\" layoutY\u003d\"541.0\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"                \u003cImage url\u003d\"@../ImagesLogin/meet-the-team.png\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"        \u003cImageView fitHeight\u003d\"37.0\" fitWidth\u003d\"163.0\" layoutX\u003d\"143.0\" layoutY\u003d\"426.0\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"                \u003cImage url\u003d\"@../ImagesLogin/contact-us.png\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"        \u003cLabel fx:id\u003d\"wrongLogin\" layoutX\u003d\"126.0\" layoutY\u003d\"217.0\" textFill\u003d\"#f40000\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"      \u003cButton fx:id\u003d\"resetButton\" layoutX\u003d\"170.0\" layoutY\u003d\"337.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleButtonAction\" prefHeight\u003d\"32.0\" prefWidth\u003d\"93.0\" style\u003d\"-fx-background-color: RED;\" text\u003d\"Reset\" textFill\u003d\"#fffafa\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"gweeyc"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"gweeyc"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"gweeyc"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"gweeyc":70}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"TeamContact 24/7 App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"    \u003cScene fx:id\u003d\"screen\" onKeyPressed\u003d\"#keyPressedHandle\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"gweeyc":9,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"      \u003cLabel fx:id\u003d\"dateJoined\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateJoined\" /\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"          \u003cImageView fitHeight\u003d\"22.0\" fitWidth\u003d\"44.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"              \u003cImage url\u003d\"@../ImagesLogin/remark.png\" /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"        \u003c/graphic\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"      \u003cLabel fx:id\u003d\"log\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$log\"\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"          \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"38.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"            \u003cimage\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"              \u003cImage url\u003d\"@../ImagesLogin/logIcon.png\" /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"            \u003c/image\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"        \u003c/graphic\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gweeyc":26,"lowyanshuang":1,"-":32}},{"path":"src/main/resources/view/emailWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"443.0\" prefWidth\u003d\"650.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.address.ui.email.EmailWindowController\"\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"561.0\" layoutY\u003d\"405.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleButtonAction\" text\u003d\"Button\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel layoutX\u003d\"31.0\" layoutY\u003d\"33.0\" text\u003d\"From: \" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel layoutX\u003d\"31.0\" layoutY\u003d\"49.0\" prefHeight\u003d\"0.0\" prefWidth\u003d\"37.0\" text\u003d\"To: \" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel layoutX\u003d\"31.0\" layoutY\u003d\"87.0\" text\u003d\"Subject: \" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"      \u003cTextField fx:id\u003d\"subjectTestField\" layoutX\u003d\"108.0\" layoutY\u003d\"83.0\" prefHeight\u003d\"23.0\" prefWidth\u003d\"510.0\" promptText\u003d\"Enter Subject Here\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"      \u003cTextArea fx:id\u003d\"emailContentArea\" layoutX\u003d\"31.0\" layoutY\u003d\"126.0\" prefHeight\u003d\"264.0\" prefWidth\u003d\"586.0\" promptText\u003d\"Email Content Here\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel fx:id\u003d\"senderEmailAddress\" layoutX\u003d\"93.0\" layoutY\u003d\"33.0\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel fx:id\u003d\"receiverEmailAddress\" layoutX\u003d\"93.0\" layoutY\u003d\"49.0\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"YangShuogeng":20}},{"path":"src/main/resources/view/emailWindowTesting.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"443.0\" prefWidth\u003d\"650.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.address.ui.email.EmailWindowController\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"561.0\" layoutY\u003d\"405.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSendButtonAction\" text\u003d\"Button\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel layoutX\u003d\"31.0\" layoutY\u003d\"33.0\" text\u003d\"From: \" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel layoutX\u003d\"31.0\" layoutY\u003d\"49.0\" prefHeight\u003d\"0.0\" prefWidth\u003d\"37.0\" text\u003d\"To: \" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel layoutX\u003d\"31.0\" layoutY\u003d\"87.0\" text\u003d\"Subject: \" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"      \u003cTextField fx:id\u003d\"subjectTestFeild\" layoutX\u003d\"108.0\" layoutY\u003d\"83.0\" promptText\u003d\"Enter Subject Here\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"      \u003cTextArea fx:id\u003d\"emailContentArea\" layoutX\u003d\"31.0\" layoutY\u003d\"126.0\" prefHeight\u003d\"264.0\" prefWidth\u003d\"586.0\" promptText\u003d\"Email Content Here\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel fx:id\u003d\"senderEmailAddress\" layoutX\u003d\"93.0\" layoutY\u003d\"33.0\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"      \u003cLabel fx:id\u003d\"receiverEmailAddress\" layoutX\u003d\"93.0\" layoutY\u003d\"49.0\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"YangShuogeng":21}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATEJOINED_DESC_DATE1;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_WITHOUT_VALUE;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_AMY + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE;","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"lowyanshuang"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withDateJoined(VALID_DATE_1)","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"lowyanshuang"},"content":"                .withTags().build();","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lowyanshuang":6,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"YangShuogeng"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"YangShuogeng"},"content":"        public void commitAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"YangShuogeng"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"YangShuogeng"},"content":"        public boolean undoAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"YangShuogeng"},"content":"            return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"YangShuogeng"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"YangShuogeng"},"content":"        public boolean redoAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"YangShuogeng"},"content":"            return false;","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"YangShuogeng"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"YangShuogeng"},"content":"        public void sortAddressBook() {","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":194,"YangShuogeng":20}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"    //public static final String VALID_LOG_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"    public static final String VALID_LOG_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"    public static final String VALID_DATE_1 \u003d \"12/02/2012\";","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"lowyanshuang"},"content":"    public static final String VALID_DATE_2 \u003d \"05/12/2000\";","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"lowyanshuang"},"content":"    public static final String VALID_REMARK_EMPTY \u003d \"\";","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"lowyanshuang"},"content":"    public static final String VALID_REMARK_WITH_VALUE \u003d \"Join company on 2013.\";","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"lowyanshuang"},"content":"    public static final String DATEJOINED_DESC_DATE1 \u003d \" \" + PREFIX_DATEJOINED + VALID_DATE_1;","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"lowyanshuang"},"content":"    public static final String DATEJOINED_DESC_DATE2 \u003d \" \" + PREFIX_DATEJOINED + VALID_DATE_2;","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"lowyanshuang"},"content":"    public static final String REMARK_DESC_WITH_VALUE \u003d \" \" + PREFIX_REMARK + VALID_REMARK_WITH_VALUE;","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"lowyanshuang"},"content":"    public static final String REMARK_DESC_WITHOUT_VALUE \u003d \" \" + PREFIX_REMARK + VALID_REMARK_EMPTY;","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"gweeyc"},"content":"        //  model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"gweeyc"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(List.of(splitName[0])));","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"gweeyc":6,"lowyanshuang":10,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/LogCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOG_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":" * Contains integration tests (interaction with the Model) and unit tests for LogCommand.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"public class LogCommandTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    private static final String LOG_STUB \u003d \"Some remark\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"    public void execute_addLogUnfilteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withLog(LOG_STUB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"        LogCommand logCommand \u003d new LogCommand(INDEX_FIRST_PERSON, new Log(editedPerson.getLog().value));","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"        String expectedMessage \u003d String.format(LogCommand.MESSAGE_ADD_LOG_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"        assertCommandSuccess(logCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"    public void execute_deleteLogUnfilteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"gweeyc"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withLog(\"\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"        LogCommand logCommand \u003d new LogCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"gweeyc"},"content":"                new Log(editedPerson.getLog().toString()));","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"gweeyc"},"content":"        String expectedMessage \u003d String.format(LogCommand.MESSAGE_DELETE_LOG_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"gweeyc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"gweeyc"},"content":"        assertCommandSuccess(logCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"gweeyc"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"gweeyc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"gweeyc"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"gweeyc"},"content":"                .withLog(LOG_STUB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"gweeyc"},"content":"        LogCommand logCommand \u003d new LogCommand(INDEX_FIRST_PERSON, new Log(editedPerson.getLog().value));","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"        String expectedMessage \u003d String.format(LogCommand.MESSAGE_ADD_LOG_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"gweeyc"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"gweeyc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"gweeyc"},"content":"        assertCommandSuccess(logCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"gweeyc"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"gweeyc"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"gweeyc"},"content":"        LogCommand logCommand \u003d new LogCommand(outOfBoundIndex, new Log(VALID_LOG_BOB));","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"gweeyc"},"content":"        assertCommandFailure(logCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"gweeyc"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"gweeyc"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"gweeyc"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"gweeyc"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"gweeyc"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"gweeyc"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"gweeyc"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"gweeyc"},"content":"        LogCommand logCommand \u003d new LogCommand(outOfBoundIndex, new Log(VALID_LOG_BOB));","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"gweeyc"},"content":"        assertCommandFailure(logCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"gweeyc":102}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATEJOINED_DESC_DATE1;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATEJOINED_DESC_DATE2;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_WITHOUT_VALUE;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_WITH_VALUE;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_EMPTY;","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_WITH_VALUE;","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"lowyanshuang"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withDateJoined(VALID_DATE_1)","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"lowyanshuang"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_BOB + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"lowyanshuang"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_BOB + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"lowyanshuang"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_BOB + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"lowyanshuang"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_BOB + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"lowyanshuang"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_BOB + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"lowyanshuang"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"lowyanshuang"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withDateJoined(VALID_DATE_2)","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"lowyanshuang"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"lowyanshuang"},"content":"                        + DATEJOINED_DESC_DATE2 + REMARK_DESC_WITHOUT_VALUE + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"lowyanshuang"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"lowyanshuang"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withDateJoined(VALID_DATE_1).withTags().build();","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"lowyanshuang"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"lowyanshuang"},"content":"                        + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITHOUT_VALUE, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"lowyanshuang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-02-28"},{"lineNumber":107,"author":{"gitId":"lowyanshuang"},"content":"                + VALID_DATE_1 + VALID_REMARK_WITH_VALUE, expectedMessage);","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"lowyanshuang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"lowyanshuang"},"content":"                + VALID_DATE_1 + VALID_REMARK_WITH_VALUE, expectedMessage);","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"lowyanshuang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-02-28"},{"lineNumber":115,"author":{"gitId":"lowyanshuang"},"content":"                + VALID_DATE_2 + VALID_REMARK_EMPTY, expectedMessage);","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"lowyanshuang"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"lowyanshuang"},"content":"                + VALID_DATE_2 + VALID_REMARK_EMPTY, expectedMessage);","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"lowyanshuang"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"lowyanshuang"},"content":"                        + VALID_DATE_2 + VALID_REMARK_EMPTY, expectedMessage);","lastModifiedDate":"2022-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"lowyanshuang"},"content":"                + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITH_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"lowyanshuang"},"content":"                + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITH_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"lowyanshuang"},"content":"                + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITH_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"lowyanshuang"},"content":"                + DATEJOINED_DESC_DATE1 + REMARK_DESC_WITH_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"lowyanshuang"},"content":"                + DATEJOINED_DESC_DATE2 + REMARK_DESC_WITH_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"lowyanshuang"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-02-28"},{"lineNumber":155,"author":{"gitId":"lowyanshuang"},"content":"                + DATEJOINED_DESC_DATE2 + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-07"},{"lineNumber":156,"author":{"gitId":"lowyanshuang"},"content":"                + REMARK_DESC_WITH_VALUE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"lowyanshuang"},"content":"                + ADDRESS_DESC_BOB + DATEJOINED_DESC_DATE2 + REMARK_DESC_WITH_VALUE","lastModifiedDate":"2022-03-07"},{"lineNumber":161,"author":{"gitId":"lowyanshuang"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"lowyanshuang":47,"-":117}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOG;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"import seedu.address.logic.commands.LogCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"gweeyc"},"content":"    public void parseCommand_log() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"gweeyc"},"content":"        final Log log \u003d new Log(\"Some remark.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"gweeyc"},"content":"        LogCommand command \u003d (LogCommand) parser.parseCommand(LogCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"gweeyc"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_LOG + log.value);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"gweeyc"},"content":"        assertEquals(new LogCommand(INDEX_FIRST_PERSON, log), command);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"gweeyc":11,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/LogCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOG;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"import seedu.address.logic.commands.LogCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"public class LogCommandParserTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"    private LogCommandParser parser \u003d new LogCommandParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"    private final String nonEmptyLog \u003d \"Some remark.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        // have remark","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_LOG + nonEmptyLog;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"        LogCommand expectedCommand \u003d new LogCommand(INDEX_FIRST_PERSON, new Log(nonEmptyLog));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"        // no remark","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_LOG;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"        expectedCommand \u003d new LogCommand(INDEX_FIRST_PERSON, new Log(\"\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"gweeyc"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"gweeyc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, LogCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"        // no parameters","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"        assertParseFailure(parser, LogCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"gweeyc"},"content":"        // no index","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"gweeyc"},"content":"        assertParseFailure(parser, LogCommand.COMMAND_WORD + \" \" + nonEmptyLog, expectedMessage);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"gweeyc":43}},{"path":"src/test/java/seedu/address/model/person/LogTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gweeyc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"gweeyc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"gweeyc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"gweeyc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"gweeyc"},"content":"public class LogTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"gweeyc"},"content":"    public void equals() {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"gweeyc"},"content":"        Log log \u003d new Log(\"Hello\");","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"gweeyc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"gweeyc"},"content":"        assertTrue(log.equals(log));","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"gweeyc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"gweeyc"},"content":"        Log logCopy \u003d new Log(log.value);","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"gweeyc"},"content":"        assertTrue(log.equals(logCopy));","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"gweeyc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"gweeyc"},"content":"        assertFalse(log.equals(1));","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"gweeyc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"gweeyc"},"content":"        assertFalse(log.equals(null));","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"gweeyc"},"content":"        // different log remark -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"gweeyc"},"content":"        Log differentLog \u003d new Log(\"Bye\");","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"        assertFalse(log.equals(differentLog));","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"gweeyc"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"gweeyc":30}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"lowyanshuang"},"content":"    private static final String VAILD_DATEJOINED \u003d BENSON.getDateJoined().toString();","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"lowyanshuang"},"content":"    private static final String VAILD_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"gweeyc"},"content":"    private static final String VALID_LOG \u003d BENSON.getLog().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"gweeyc"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VAILD_DATEJOINED,","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"gweeyc"},"content":"                        VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"gweeyc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"gweeyc"},"content":"                VAILD_DATEJOINED, VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VAILD_DATEJOINED,","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"                        VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"gweeyc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"gweeyc"},"content":"                VAILD_DATEJOINED, VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"gweeyc"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VAILD_DATEJOINED,","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"gweeyc"},"content":"                        VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"gweeyc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"gweeyc"},"content":"                VAILD_DATEJOINED, VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"gweeyc"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VAILD_DATEJOINED,","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"gweeyc"},"content":"                        VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"lowyanshuang"},"content":"        assertThrows(IllegalValueException.class, expectedMessage,","lastModifiedDate":"2022-02-23"},{"lineNumber":102,"author":{"gitId":"lowyanshuang"},"content":"                person::toModelType);","lastModifiedDate":"2022-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"gweeyc"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"gweeyc"},"content":"                VAILD_DATEJOINED, VAILD_REMARK, VALID_LOG, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"lowyanshuang"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"gweeyc"},"content":"                        VAILD_DATEJOINED, VAILD_REMARK, VALID_LOG, invalidTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gweeyc":18,"lowyanshuang":5,"-":99}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"        descriptor.setDateJoined(person.getDateJoined());","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lowyanshuang":2,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.DateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"gweeyc"},"content":"import seedu.address.model.person.Log;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"lowyanshuang"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"lowyanshuang"},"content":"    public static final String DEFAULT_DATEJOINED \u003d \"15/12/2001\";","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"lowyanshuang"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"gweeyc"},"content":"    public static final String DEFAULT_LOG \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"lowyanshuang"},"content":"    private DateJoined dateJoined;","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"lowyanshuang"},"content":"    private Remark remark;","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"gweeyc"},"content":"    private Log log;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"gweeyc"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"        dateJoined \u003d new DateJoined(DEFAULT_DATEJOINED);","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"lowyanshuang"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"gweeyc"},"content":"        log \u003d new Log(DEFAULT_LOG);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"lowyanshuang"},"content":"        dateJoined \u003d personToCopy.getDateJoined();","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"lowyanshuang"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"gweeyc"},"content":"        log \u003d personToCopy.getLog();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"gweeyc"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"gweeyc"},"content":"     * Sets the {@code Log} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"gweeyc"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"gweeyc"},"content":"    public PersonBuilder withLog(String remark) {","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"gweeyc"},"content":"        this.log \u003d new Log(remark);","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"gweeyc"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"lowyanshuang"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"lowyanshuang"},"content":"     * Sets the {@code DateJoined} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"lowyanshuang"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"lowyanshuang"},"content":"    public PersonBuilder withDateJoined(String dateJoined) {","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"lowyanshuang"},"content":"        this.dateJoined \u003d new DateJoined(dateJoined);","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"lowyanshuang"},"content":"        return this;","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"lowyanshuang"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":124,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":125,"author":{"gitId":"gweeyc"},"content":"    public Person build() {","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"gweeyc"},"content":"        return new Person(name, phone, email, address, dateJoined, remark, log, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"gweeyc"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"gweeyc":16,"lowyanshuang":18,"-":94}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATEJOINED;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"lowyanshuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"lowyanshuang"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"        sb.append(PREFIX_DATEJOINED + person.getDateJoined().value + \" \");","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"lowyanshuang"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"lowyanshuang"},"content":"        descriptor.getDateJoined().ifPresent(dateJoined -\u003e sb.append(PREFIX_DATEJOINED)","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"lowyanshuang"},"content":"                .append(dateJoined.value).append(\" \"));","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"lowyanshuang"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"lowyanshuang":8,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"lowyanshuang"},"content":"            .withPhone(\"94351253\").withDateJoined(\"05/12/2013\")","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"gweeyc"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withLog(\"He can\u0027t take beer!\")","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"lowyanshuang"},"content":"            .withDateJoined(\"15/12/2003\")","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"lowyanshuang"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"lowyanshuang"},"content":"            .withDateJoined(\"05/11/2000\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"lowyanshuang"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"lowyanshuang"},"content":"            .withDateJoined(\"12/12/2013\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"lowyanshuang"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"lowyanshuang"},"content":"            .withDateJoined(\"05/05/1999\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"lowyanshuang"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"lowyanshuang"},"content":"            .withDateJoined(\"05/12/2013\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"lowyanshuang"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"lowyanshuang"},"content":"            .withDateJoined(\"05/12/2013\").build();","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"gweeyc"},"content":"    // public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"gweeyc":2,"lowyanshuang":12,"-":68}}]
