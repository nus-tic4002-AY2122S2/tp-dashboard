[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"[![CI Status](https://github.com/AY2122S2-TIC4002-F18-6/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-TIC4002-F18-6/tp2/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"## Basic Information","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"* This application is called **MyContentPlanner**, which is for **social media managers** to track the social media content and manage their clients.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"  * It is a `CLI` based project but also have a `GUI` view to display a more beautiful layout.","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"  * Used for better managing client\u0027s social media profile.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"  * A social media manager can easily create and modify the `contents` and `clients` and see a beautiful list view of both.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"  * User who type very fast can achieve what they want faster than mouse moving and clicking.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"* For the detailed documentation of this project, see the **[Product MyContentPlanner Website](https://ay2122s2-tic4002-f18-6.github.io/tp2)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"## User Guide","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"* [User Guide](https://ay2122s2-tic4002-f18-6.github.io/tp2/UserGuide.html)","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"## Developer Guide","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"* [Developer Guide](https://ay2122s2-tic4002-f18-6.github.io/tp2/DeveloperGuide.html)","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"## About Us","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"* [About Us](https://ay2122s2-tic4002-f18-6.github.io/tp2/AboutUs.html)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"## Acknowledge","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"* This project is basically upgraded from **[Product AddressBook-Level3 Website](https://se-education.org/addressbook-level3)** created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Ruiting1":20,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"### Khor Kee Yong","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"[[github](https://github.com/kaydenkhor)]","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"### Jane Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Johnny Doe","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Jean Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### James Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":56,"KaydenKhor":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Ruiting1"},"content":"This application is for `social media managers` who need to track monthly social media content posting schedule so that they won\u0027t miss out any days without posting content for their client. Meanwhile, they prefer to use the command line to save the ready-made content link over the GUI and have tons of content to keep track.","lastModifiedDate":"2022-03-11"},{"lineNumber":261,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":262,"author":{"gitId":"Ruiting1"},"content":"* has a need to manage a significant number of clients and posts.","lastModifiedDate":"2022-03-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"Ruiting1"},"content":"**Value proposition**: ","lastModifiedDate":"2022-03-11"},{"lineNumber":269,"author":{"gitId":"Ruiting1"},"content":"- manage clients and posts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-03-11"},{"lineNumber":270,"author":{"gitId":"Ruiting1"},"content":"- Better manage client\u0027s social media profile.","lastModifiedDate":"2022-03-11"},{"lineNumber":271,"author":{"gitId":"Ruiting1"},"content":"- Able to have full oversight and overview of the monthly content schedule.","lastModifiedDate":"2022-03-11"},{"lineNumber":272,"author":{"gitId":"Ruiting1"},"content":"- Able to give insightful data from the post-performance.","lastModifiedDate":"2022-03-11"},{"lineNumber":273,"author":{"gitId":"Ruiting1"},"content":"- Able to trigger notification while nearing the deadline.","lastModifiedDate":"2022-03-11"},{"lineNumber":274,"author":{"gitId":"Ruiting1"},"content":"- Both client and social media manager are able to view the planner concurrently.","lastModifiedDate":"2022-03-11"},{"lineNumber":275,"author":{"gitId":"Ruiting1"},"content":"- Tweet type of content only (255 characters only)","lastModifiedDate":"2022-03-11"},{"lineNumber":276,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Ruiting1"},"content":"| `*`      |                                            |                                |                                                                        |","lastModifiedDate":"2022-03-11"},{"lineNumber":292,"author":{"gitId":"Ruiting1"},"content":"| `* * *`  | social media manager | add clients\u0027 names in the app          | I can see the number of clients that I currently have                                                |","lastModifiedDate":"2022-03-11"},{"lineNumber":293,"author":{"gitId":"Ruiting1"},"content":"| `* * *`  | social media manager | be able to add contents of post to my planner | i can keep track of what i have posted for each client                                               |","lastModifiedDate":"2022-03-11"},{"lineNumber":294,"author":{"gitId":"Ruiting1"},"content":"| `* * `  | social media manager | be able to tag dates to postings in my planner |  I can keep track of when posts are made                                                |","lastModifiedDate":"2022-03-11"},{"lineNumber":295,"author":{"gitId":"Ruiting1"},"content":"| `* * `  | social media manager | save my idea inspirations in the application | I can refer to it when I’m creating content                                                |","lastModifiedDate":"2022-03-11"},{"lineNumber":296,"author":{"gitId":"Ruiting1"},"content":"| `* * *` | social media manager | delete post from my planner | if I delete the respective social media post, it would be reflected in the planner                                                |","lastModifiedDate":"2022-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":18,"-":375}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"**MyContentPlanner** is a desktop app for social media managers to manage the posts and clients, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**. If you can type fast, MyContentPlanner can get your social media management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"1. Download the latest `mycontentplanner.jar` from [here](https://github.com/AY2122S2-TIC4002-F18-6/tp2/releases).","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Content Planner.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"   * **`list`** : Lists all clients and posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"   * **`add`** **`client`** `n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a client named `John Doe` to the **Client List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"   * **`delete`** **`post`**`3 5` : Deletes the 3rd and 5th post shown in the **Post List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"   * **`clear`** **`client`**: Deletes all clients in the **Client List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"### `add` - Add a client or a post","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"Add a client into the **Client List** or add a post into the **Post List**","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"Syntax: `add client|c n/NAME p/PHONE ...` or `add post|p t/TITLE c/CONTENT ...`","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"Example: `add client n/John Doe p/12345678 ...`","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"Expected outcome:","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"### `delete` - Delete a client or a post","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"Delete a client from the **Client List** or delete a post from the **Post List** based on the specified INDEX in each list.","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"* Deletes the client or the post at the specified `INDEX`.","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"* The index refers to the index number shown in the displayed **Client List** or **Post List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"* The index can be a single index or multiple index(index list)","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"Syntax: `delete client|c INDEX1 INDEX2 ...` or `delete post|p INDEX1 INDEX2 ...`","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"Example: `delete post 3 5`","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"Expected outcome:","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"### `edit` - Edit a client or a post","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"Edit an existing client in the **Client List** or an existing post in the **Post List** based on the specified INDEX in each list.","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"* Edits the client or the post at the specified `INDEX`. ","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"* The index refers to the index number shown in the displayed **Client List** or **Post List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"* The index must be a single index.","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"* You can remove all the client\u0027s tags by typing `t/` without","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"  specifying any tags after it.","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"Syntax: `edit client|c INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` or ","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"`delete post|p INDEX [t/TITLE] [c/CONTENT]...`","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"Example: `edit c 3 a/a new address`","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"Expected outcome:","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"### `list` - List the clients and posts","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"List all the clients in the **Client List** and all the posts in the **Post List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"Syntax: `list` ","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"Expected outcome:","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"###  `help` - Viewing help ","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Ruiting1"},"content":"Syntax: `help`","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":149,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"### `clear` - Clearing all entries","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Ruiting1"},"content":"Clears all entries from the Content Planner.","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"Syntax: `clear`","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"### `exit` - Exiting the program","lastModifiedDate":"2022-03-02"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"Exits the program.","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"Syntax: `exit`","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"--------------------","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"## Original AB3 part","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"Ruiting1"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MyContentPlanner home folder.","lastModifiedDate":"2022-03-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"Ruiting1"},"content":"## Command summary - pending update","lastModifiedDate":"2022-03-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":101,"-":170}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-TIC4002-F18-6/tp2/branch/master/graph/badge.svg?token\u003dL9P51AL53B)](https://codecov.io/gh/AY2122S2-TIC4002-F18-6/tp2)","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":1,"-":18}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    /** Returns an unmodifiable view of the filtered list of posts */","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    ObservableList\u003cPost\u003e getFilteredPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ruiting1":5,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e getFilteredPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        return model.getFilteredPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ruiting1":6,"-":81}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.UniquePostList;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private final UniquePostList posts;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        posts \u003d new UniquePostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"     * Creates an AddressBook using the Persons and posts in the {@code toBeCopied}","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the contents of the post list with {@code posts}.","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"     * {@code posts} must not contain duplicate posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    public void setPosts(List\u003cPost\u003e posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        this.posts.setPosts(posts);","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        setPosts(newData.getPostList());","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"    //// post-level operations","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if a post with the same identity as {@code post} exists in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"    public boolean hasPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"        return posts.contains(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"     * Adds a post to the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"     * The post must not already exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"    public void addPost(Post p) {","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"        posts.add(p);","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the given post {@code target} in the list with {@code editedPost}.","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"     * The post identity of {@code editedPerson} must not be the same as another existing post in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"    public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"        posts.setPost(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"Ruiting1"},"content":"    public void removePost(Post key) {","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"        posts.remove(key);","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e getPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"        return posts.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons) \u0026\u0026 posts.equals(((AddressBook) other).posts));","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruiting1":59,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    Predicate\u003cPost\u003e PREDICATE_SHOW_ALL_POSTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if a post with the same identity as {@code post} exists in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"    boolean hasPost(Post post);","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"     * Deletes the given post.","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"     * The post must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"    void deletePost(Post target);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"     * Adds the given post.","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"     * {@code post} must not already exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"    void addPost(Post post);","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the given post {@code target} with {@code editedPost}.","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"     * The post identity of {@code editedPost} must not be the same as another existing post in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"    void setPost(Post target, Post editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"    /** Returns an unmodifiable view of the filtered post list */","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"    ObservableList\u003cPost\u003e getFilteredPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"     * Updates the filter of the filtered post list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"    void updateFilteredPostList(Predicate\u003cPost\u003e predicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ruiting1":38,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    private final FilteredList\u003cPost\u003e filteredPosts;","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        filteredPosts \u003d new FilteredList\u003c\u003e(this.addressBook.getPostList());","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"    public boolean hasPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"        return addressBook.hasPost(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"    public void deletePost(Post target) {","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"        addressBook.removePost(target);","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"    public void addPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"        addressBook.addPost(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"        updateFilteredPostList(PREDICATE_SHOW_ALL_POSTS);","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"    public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"        addressBook.setPost(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"     * Returns an unmodifiable view of the list of {@code Post} backed by the internal list of","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-02"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e getFilteredPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"        return filteredPosts;","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":170,"author":{"gitId":"Ruiting1"},"content":"    public void updateFilteredPostList(Predicate\u003cPost\u003e predicate) {","lastModifiedDate":"2022-03-02"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":172,"author":{"gitId":"Ruiting1"},"content":"        filteredPosts.setPredicate(predicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":173,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-02"},{"lineNumber":192,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 filteredPosts.equals(other.filteredPosts);","lastModifiedDate":"2022-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruiting1":46,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     * Returns an unmodifiable view of the posts list.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     * This list will not contain any duplicate posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    ObservableList\u003cPost\u003e getPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruiting1":9,"-":17}},{"path":"src/main/java/seedu/address/model/post/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Category {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     * @param category A valid category.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public Category(String category) {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d category;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Category // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Category) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":35}},{"path":"src/main/java/seedu/address/model/post/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Content {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Content}.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     * @param content A valid content.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public Content(String content) {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d content;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Content // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Content) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":34}},{"path":"src/main/java/seedu/address/model/post/Notes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Notes {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Notes}.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     * @param notes A valid notes.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public Notes(String notes) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Notes // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Notes) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":32}},{"path":"src/main/java/seedu/address/model/post/Post.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"public class Post {","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    private final Title title;","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    private final Content content;","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    private final PostDate postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    private final Category category;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    private final Notes notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"     * Constructor to create a Post","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public Post(Title title, Content content, PostDate postDate, Category category, Notes notes) {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"        this.postDate \u003d postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        return title;","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public Content getContent() {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return content;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    public PostDate getPostDate() {","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        return postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        return category;","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    public Notes getNotes() {","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        return notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if both posts have the same title.","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"     * This defines a weaker notion of equality between two posts.","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    public boolean isSamePost(Post otherPost) {","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        if (otherPost \u003d\u003d this) {","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        return otherPost !\u003d null","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getTitle().equals(getTitle());","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if both posts have the same identity and data fields.","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"     * This defines a stronger notion of equality between two posts.","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"        if (!(other instanceof Post)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        Post otherPost \u003d (Post) other;","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"        return otherPost.getTitle().equals(getTitle())","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getContent().equals(getContent())","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getPostDate().equals(getPostDate())","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getCategory().equals(getCategory())","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getNotes().equals(getNotes());","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        return Objects.hash(title, content, postDate, category, notes);","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"        builder.append(getTitle())","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; Content: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"                .append(getContent())","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; PostDate: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"                .append(getPostDate())","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"                .append(getCategory())","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; Notes: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"                .append(getNotes());","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"        return builder.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":100}},{"path":"src/main/java/seedu/address/model/post/PostDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class PostDate {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code PostDate}.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     * @param postDate A valid postDate.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public PostDate(String postDate) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof PostDate // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((PostDate) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":32}},{"path":"src/main/java/seedu/address/model/post/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Title {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     * @param title A valid title.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public Title(String title) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Title) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":31}},{"path":"src/main/java/seedu/address/model/post/UniquePostList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.exceptions.DuplicatePostException;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.exceptions.PostNotFoundException;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"public class UniquePostList implements Iterable\u003cPost\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private final ObservableList\u003cPost\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    private final ObservableList\u003cPost\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if the list contains an equivalent post as the given argument.","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    public boolean contains(Post toCheck) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePost);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"     * Adds a post to the post list.","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     * The post must not already exist in the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public void add(Post toAdd) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicatePostException();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the post {@code target} in the post list with {@code editedPost}.","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     * {@code target} must exist in the post list.","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"     * The post identity of {@code editedPost} must not be the same as another existing post in the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"            throw new PostNotFoundException();","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        if (!target.isSamePost(editedPost) \u0026\u0026 contains(editedPost)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicatePostException();","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        internalList.set(index, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"     * Removes the equivalent post from the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     * The post must exist in the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    public void remove(Post toRemove) {","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"            throw new PostNotFoundException();","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"    public void setPosts(UniquePostList replacement) {","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the contents of this list with {@code posts}.","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"     * {@code posts} must not contain duplicate posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"    public void setPosts(List\u003cPost\u003e posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(posts);","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"        if (!postsAreUnique(posts)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicatePostException();","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"        internalList.setAll(posts);","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"    public Iterator\u003cPost\u003e iterator() {","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof UniquePostList // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 internalList.equals(((UniquePostList) other).internalList));","lastModifiedDate":"2022-03-02"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if {@code posts} contains only unique posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"    private boolean postsAreUnique(List\u003cPost\u003e posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"        for (int i \u003d 0; i \u003c posts.size() - 1; i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"            for (int j \u003d i + 1; j \u003c posts.size(); j++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"                if (posts.get(i).isSamePost(posts.get(j))) {","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"                    return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"                }","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"        return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":130}},{"path":"src/main/java/seedu/address/model/post/exceptions/DuplicatePostException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post.exceptions;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" * Signals that the operation will result in duplicate Posts (Posts are considered duplicates if they have the same","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" * identity).","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"public class DuplicatePostException extends RuntimeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public DuplicatePostException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"        super(\"Operation would result in duplicate posts\");","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":12}},{"path":"src/main/java/seedu/address/model/post/exceptions/PostNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post.exceptions;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":" * Signals that the operation is unable to find the specified post.","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"public class PostNotFoundException extends RuntimeException{","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Category;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Content;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Notes;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.PostDate;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Title;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"public class JsonAdaptedPost {","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    private final String title;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    private final String content;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    private final String postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private final String category;","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    private final String notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code JsonAdaptedPost} with the given post details.","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    @JsonCreator","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    public JsonAdaptedPost(@JsonProperty(\"title\") String title, @JsonProperty(\"content\") String content,","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"postdate\") String postDate, @JsonProperty(\"category\") String category,","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"notes\") String notes) {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        this.postDate \u003d postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     * Converts a given {@code Post} into this class for Jackson use.","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    public JsonAdaptedPost(Post source) {","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        title \u003d source.getTitle().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        content \u003d source.getContent().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        postDate \u003d source.getPostDate().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        category \u003d source.getCategory().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        notes \u003d source.getNotes().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"     * Converts this Jackson-friendly adapted post object into the model\u0027s {@code Post} object.","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted post.","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    public Post toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        final Content modelContent \u003d new Content(content);","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        final PostDate modelPostdate \u003d new PostDate(postDate);","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        final Category modelCategory \u003d new Category(category);","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"        final Notes modelNotes \u003d new Notes(notes);","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        return new Post(modelTitle, modelContent, modelPostdate, modelCategory, modelNotes);","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":63}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_DUPLICATE_POST \u003d \"Posts list contains duplicate post(s).\";","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private final List\u003cJsonAdaptedPost\u003e posts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"                                       @JsonProperty(\"posts\") List\u003cJsonAdaptedPost\u003e posts) {","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        this.posts.addAll(posts);","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        posts.addAll(source.getPostList().stream().map(JsonAdaptedPost::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        for (JsonAdaptedPost jsonAdaptedPost : posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"            Post post \u003d jsonAdaptedPost.toModelType();","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"            if (addressBook.hasPost(post)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_POST);","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"            addressBook.addPost(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ruiting1":17,"-":59}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    private PostListPanel postListPanel;","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    private StackPane postListPanelPlaceholder;","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"        postListPanel \u003d new PostListPanel(logic.getFilteredPostList());","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"        postListPanelPlaceholder.getChildren().add(postListPanel.getRoot());","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"    public PostListPanel getPostListPanel() {","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"        return postListPanel;","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ruiting1":11,"-":196}},{"path":"src/main/java/seedu/address/ui/PostCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":" * A UI component that displays information of a {@code Post}.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"public class PostCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    private static final String FXML \u003d \"PostListCard.fxml\";","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public final Post post;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    private Label id;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    private Label title;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    private Label content;","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private Label postdate;","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    private Label category;","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    private Label notes;","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"     * Creates a {@code PostCard} with the given {@code Post} and index to display.","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    public PostCard(Post post, int displayedIndex) {","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        super(FXML);","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        this.post \u003d post;","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        title.setText(post.getTitle().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        content.setText(post.getContent().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        postdate.setText(post.getPostDate().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        category.setText(post.getCategory().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        notes.setText(post.getNotes().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        if (!(other instanceof PostCard)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        PostCard card \u003d (PostCard) other;","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 post.equals(card.post);","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":66}},{"path":"src/main/java/seedu/address/ui/PostListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"public class PostListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    private static final String FXML \u003d \"PostListPanel.fxml\";","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PostListPanel.class);","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private ListView\u003cPost\u003e postListView;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"     * Creates a {@code PostListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public PostListPanel(ObservableList\u003cPost\u003e postList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        super(FXML);","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        postListView.setItems(postList);","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        postListView.setCellFactory(listView -\u003e new PostListPanel.PostListViewCell());","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Post} using a {@code PostCard}.","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    class PostListViewCell extends ListCell\u003cPost\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"        protected void updateItem(Post post, boolean empty) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"            super.updateItem(post, empty);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"            if (empty || post \u003d\u003d null) {","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"                setText(null);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"                setGraphic(new PostCard(post, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"\u003cfx:root minHeight\u003d\"600.0\" minWidth\u003d\"900.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.29797979797979796, 0.5\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\"","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"                           VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"                    \u003citems\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"                        \u003cVBox\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"                                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"                                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\"","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"                                           prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"                        \u003cVBox fx:id\u003d\"postList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"                            \u003cStackPane fx:id\u003d\"postListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Ruiting1":25,"-":51}},{"path":"src/main/resources/view/PostListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$title\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"content\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$content\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"postdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$postdate\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$category\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$notes\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":36}},{"path":"src/main/resources/view/PostListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    \u003cListView fx:id\u003d\"postListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":8}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"        public void addPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":149,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"        public boolean hasPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":152,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"        public void deletePost(Post target) {","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"        public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"        public ObservableList\u003cPost\u003e getFilteredPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"        public void updateFilteredPostList(Predicate\u003cPost\u003e predicate) {","lastModifiedDate":"2022-03-02"},{"lineNumber":181,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":182,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Ruiting1":33,"-":194}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"        private final ObservableList\u003cPost\u003e posts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"        public ObservableList\u003cPost\u003e getPostList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"            return posts;","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Ruiting1":8,"-":102}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    private static final Path DUPLICATE_POST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePostContentPlanner.json\");","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    public void toModelType_duplicatePosts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_POST_FILE,","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_POST,","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ruiting1":10,"-":47}}]
