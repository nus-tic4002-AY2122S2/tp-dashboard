[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"[![CI Status](https://github.com/AY2122S2-TIC4002-F18-6/tp2/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-TIC4002-F18-6/tp2/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"## Basic Information","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"* This application is called **MyContentPlanner**, which is for **social media managers** to track the social media content and manage their clients.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"  * It is a `CLI` based project but also have a `GUI` view to display a more beautiful layout.","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"  * Used for better managing client\u0027s social media profile.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"  * A social media manager can easily create and modify the `contents` and `clients` and see a beautiful list view of both.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"  * User who type very fast can achieve what they want faster than mouse moving and clicking.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"* For the detailed documentation of this project, see the **[Product MyContentPlanner Website](https://ay2122s2-tic4002-f18-6.github.io/tp2)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"## User Guide","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"* [User Guide](https://ay2122s2-tic4002-f18-6.github.io/tp2/UserGuide.html)","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"## Developer Guide","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"* [Developer Guide](https://ay2122s2-tic4002-f18-6.github.io/tp2/DeveloperGuide.html)","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"## About Us","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"* [About Us](https://ay2122s2-tic4002-f18-6.github.io/tp2/AboutUs.html)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"## Acknowledge","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"* This project is basically upgraded from **[Product AddressBook-Level3 Website](https://se-education.org/addressbook-level3)** created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"Ruiting1":20,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    archiveName \u003d \u0027mycontentplanner.jar\u0027","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"run{","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":4,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"### Khor Kee Yong","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"[[github](https://github.com/kaydenkhor)]","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"### Nie Ruiting","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"\u003cimg src\u003d\"images/ruiting1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"[[github](https://github.com/Ruiting1)]","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"[[portfolio](team/ruiting1.md)]","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"* Role: Developer","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"* Responsibilities: coding / UI / Documentation","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"### Tan Li Hao, Broderick","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"[[github](https://github.com/e0262191)]","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"### Gimpaya Yralle Lesly John Caday","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"[[github](https://github.com/Mr-YaRou)]","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":11,"-":37,"KaydenKhor":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"layout: page title: Developer Guide","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"  original source as well}","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"diagrams.","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"**`Main`** has two classes","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"is responsible for,","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"the command `delete 1`.","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"The **API** of this component is specified","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"is specified","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"**","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"call.","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"  a `Command` object.","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"**","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Ruiting1"},"content":"**","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"  objects.","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"Ruiting1"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"Ruiting1"},"content":"  that belong to the `Model`)","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"Ruiting1"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"Ruiting1"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"Ruiting1"},"content":"following operations:","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Ruiting1"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2022-03-21"},{"lineNumber":203,"author":{"gitId":"Ruiting1"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2022-03-21"},{"lineNumber":204,"author":{"gitId":"Ruiting1"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Ruiting1"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"Ruiting1"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"Ruiting1"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"Ruiting1"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Ruiting1"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2022-03-21"},{"lineNumber":217,"author":{"gitId":"Ruiting1"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2022-03-21"},{"lineNumber":218,"author":{"gitId":"Ruiting1"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2022-03-21"},{"lineNumber":219,"author":{"gitId":"Ruiting1"},"content":"state.","lastModifiedDate":"2022-03-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"Ruiting1"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2022-03-21"},{"lineNumber":224,"author":{"gitId":"Ruiting1"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"Ruiting1"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2022-03-21"},{"lineNumber":233,"author":{"gitId":"Ruiting1"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2022-03-21"},{"lineNumber":234,"author":{"gitId":"Ruiting1"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"Ruiting1"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2022-03-21"},{"lineNumber":252,"author":{"gitId":"Ruiting1"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2022-03-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"Ruiting1"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2022-03-21"},{"lineNumber":259,"author":{"gitId":"Ruiting1"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2022-03-21"},{"lineNumber":260,"author":{"gitId":"Ruiting1"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-03-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"Ruiting1"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2022-03-21"},{"lineNumber":265,"author":{"gitId":"Ruiting1"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2022-03-21"},{"lineNumber":266,"author":{"gitId":"Ruiting1"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2022-03-21"},{"lineNumber":267,"author":{"gitId":"Ruiting1"},"content":"desktop applications follow.","lastModifiedDate":"2022-03-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"Ruiting1"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2022-03-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Ruiting1"},"content":"This application is for `social media managers` who need to track monthly social media content posting schedule so that","lastModifiedDate":"2022-03-21"},{"lineNumber":313,"author":{"gitId":"Ruiting1"},"content":"they won\u0027t miss out any days without posting content for their client. Meanwhile, they prefer to use the command line to","lastModifiedDate":"2022-03-21"},{"lineNumber":314,"author":{"gitId":"Ruiting1"},"content":"save the ready-made content link over the GUI and have tons of content to keep track.","lastModifiedDate":"2022-03-21"},{"lineNumber":315,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":316,"author":{"gitId":"Ruiting1"},"content":"* has a need to manage a significant number of clients and posts.","lastModifiedDate":"2022-03-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"Ruiting1"},"content":"**Value proposition**:","lastModifiedDate":"2022-03-11"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":324,"author":{"gitId":"Ruiting1"},"content":"- manage clients and posts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-03-11"},{"lineNumber":325,"author":{"gitId":"Ruiting1"},"content":"- Better manage client\u0027s social media profile.","lastModifiedDate":"2022-03-11"},{"lineNumber":326,"author":{"gitId":"Ruiting1"},"content":"- Able to have full oversight and overview of the monthly content schedule.","lastModifiedDate":"2022-03-11"},{"lineNumber":327,"author":{"gitId":"Ruiting1"},"content":"- Able to give insightful data from the post-performance.","lastModifiedDate":"2022-03-11"},{"lineNumber":328,"author":{"gitId":"Ruiting1"},"content":"- Able to trigger notification while nearing the deadline.","lastModifiedDate":"2022-03-11"},{"lineNumber":329,"author":{"gitId":"Ruiting1"},"content":"- Both client and social media manager are able to view the planner concurrently.","lastModifiedDate":"2022-03-11"},{"lineNumber":330,"author":{"gitId":"Ruiting1"},"content":"- Tweet type of content only (255 characters only)","lastModifiedDate":"2022-03-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Ruiting1"},"content":"| `*`      |                                            |                                |                                                                        |","lastModifiedDate":"2022-03-11"},{"lineNumber":345,"author":{"gitId":"Ruiting1"},"content":"| `* * *`  | social media manager | add clients\u0027 names in the app          | I can see the number of clients that I currently have                                |","lastModifiedDate":"2022-03-11"},{"lineNumber":346,"author":{"gitId":"Ruiting1"},"content":"| `* * *`  | social media manager | be able to add contents of post to my planner | i can keep track of what i have posted for each client                        |","lastModifiedDate":"2022-03-11"},{"lineNumber":347,"author":{"gitId":"Ruiting1"},"content":"| `* * `  | social media manager | be able to tag dates to postings in my planner |  I can keep track of when posts are made                                      |","lastModifiedDate":"2022-03-11"},{"lineNumber":348,"author":{"gitId":"Ruiting1"},"content":"| `* * `  | social media manager | save my idea inspirations in the application | I can refer to it when I’m creating content                                     |","lastModifiedDate":"2022-03-11"},{"lineNumber":349,"author":{"gitId":"Ruiting1"},"content":"| `* * *` | social media manager | delete post from my planner | if I delete the respective social media post, it would be reflected in the planner               |","lastModifiedDate":"2022-03-11"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"Ruiting1"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2022-03-21"},{"lineNumber":356,"author":{"gitId":"Ruiting1"},"content":"otherwise)","lastModifiedDate":"2022-03-21"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"2. AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"3. User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"4. AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"Ruiting1"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2022-03-21"},{"lineNumber":388,"author":{"gitId":"Ruiting1"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-21"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"Ruiting1"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2022-03-21"},{"lineNumber":415,"author":{"gitId":"Ruiting1"},"content":"       optimum.","lastModifiedDate":"2022-03-21"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"Ruiting1"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2022-03-21"},{"lineNumber":434,"author":{"gitId":"Ruiting1"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2022-03-21"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":121,"-":329}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"layout: page title: User Guide","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"**MyContentPlanner** is a desktop app for social media managers to manage the posts and clients, optimized for use via","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**. If you can","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"type fast, MyContentPlanner can get your social media management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"1. Download the latest `mycontentplanner.jar` from [here](https://github.com/AY2122S2-TIC4002-F18-6/tp2/releases).","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Content Planner.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    * **`list`** : Lists all clients and posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    * **`add`** **`client`** `n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"      client named `John Doe` to the **Client List**.","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    * **`delete`** **`post`**`3 5` : Deletes the 3rd and 5th post shown in the **Post List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    * **`clear`** **`client`**: Deletes all clients in the **Client List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"### `add` - Add a client or a post","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"Add a client into the **Client List** or add a post into the **Post List**","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"Syntax: `add client|c n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` or `add post|p t/TITLE c/CONTENT p/POSTDATE ca/CATEGORY n/NOTES`","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"* `POSTDATE` format is `yyyyMMdd HHmm` e.g. `20220314 1800`","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"Examples: ","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"* `add client n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"* `add c n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"* `add post t/a dummy title one c/a dummy example content one p/20220314 1800 ca/promotion n/remember sent by 14/03`","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"* `add p t/a dummy title two c/a dummy example content two p/20220805 0900 ca/notice n/remember sent to all VIP1`","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"Expected outcome:","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"### `delete` - Delete a client or a post (for mass delete haven\u0027t implement)","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"Delete a client from the **Client List** or delete a post from the **Post List** based on the specified INDEX in each","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"list.","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"* Deletes the client or the post at the specified `INDEX`.","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"* The index refers to the index number shown in the displayed **Client List** or **Post List**.","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"* The index can be a single index or multiple index(index list)","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"Syntax: `delete client|c INDEX1 INDEX2 ...` or `delete post|p INDEX1 INDEX2 ...`","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"Examples: ","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"* `delete post 3 5`","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"* `delete c 1 3`","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"### `list` - List the clients and posts","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"List all the clients in the **Client List** and all the posts in the **Post List**.","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"Syntax: `list`","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"### `send` - Send the post(s) to client(s)","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"Send the selected post(s) in the **Post List** to the selected client(s) in the **Client List** by the index.","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"* Application will check if a post already sent to a client.","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"* If a post already send to all the clients that user selected, the application will do nothing but have a warning","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"* If some clients already received the post, it will send to the rest clients.","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"* The index refers to the index number shown in the displayed **Client List** or **Post List**.","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"* The index can be a single index or multiple index(index list)","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"Syntax: `send c/INDEX1 INDEX2...  p/INDEX1 INDEX2...`","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"Examples: ","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"* `send c/1 3 4 5 p/1 4` means send the post index 1 and 4 to the client index 1, 3, 4 and 5","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"* `send c/1 p/1 2 3` means send the post index 1, 2 and 3 to the client index 1","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"### `sort` - Sort the post by post date","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"Sort all the posts in **Post List** by the post date (either ascending order or descending order)","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"* the first argument after command word is a keyword, currently only implement for `postdate`","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"Syntax: `sort postdate asc|desc`","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"Ruiting1"},"content":"* `sort postdate asc` for ascending order","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"* `sort postdate desc`for descending order","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"Ruiting1"},"content":"### `help` - Viewing help","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"Syntax: `help`","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"### `clear` - Clearing all entries","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"Clears all entries from the Content Planner.","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"Syntax: `clear`","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"### `exit` - Exiting the program","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"Exits the program.","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"Syntax: `exit`","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"Ruiting1"},"content":"### `edit` - Edit a client or a post (haven\u0027t implemented)","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"Edit an existing client in the **Client List** or an existing post in the **Post List** based on the specified INDEX in","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"Ruiting1"},"content":"each list.","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Ruiting1"},"content":"* Edits the client or the post at the specified `INDEX`.","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"* The index refers to the index number shown in the displayed **Client List** or **Post List**.","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"* The index must be a single index.","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"Ruiting1"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"Ruiting1"},"content":"* You can remove all the client\u0027s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Ruiting1"},"content":"Syntax: `edit client|c INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` or","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"Ruiting1"},"content":"`delete post|p INDEX [t/TITLE] [c/CONTENT]...`","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"Ruiting1"},"content":"Example: `edit c 3 a/a new address`","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"Ruiting1"},"content":"Expected outcome:","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Ruiting1"},"content":"```","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"Ruiting1"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`","lastModifiedDate":"2022-03-21"},{"lineNumber":212,"author":{"gitId":"Ruiting1"},"content":"  , `Bo Yang`","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"Ruiting1"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2022-03-21"},{"lineNumber":225,"author":{"gitId":"Ruiting1"},"content":"save manually.","lastModifiedDate":"2022-03-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"Ruiting1"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to","lastModifiedDate":"2022-03-21"},{"lineNumber":230,"author":{"gitId":"Ruiting1"},"content":"update data directly by editing that data file.","lastModifiedDate":"2022-03-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"Ruiting1"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2022-03-21"},{"lineNumber":246,"author":{"gitId":"Ruiting1"},"content":"the data of your previous MyContentPlanner home folder.","lastModifiedDate":"2022-03-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"Ruiting1"},"content":"## Command summary - pending update","lastModifiedDate":"2022-03-02"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"Ruiting1"},"content":"**Add** | `add client n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add client n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"Ruiting1"},"content":"**Delete** | `delete client INDEX INDEX` or `delete post INDEX INDEX` \u003cbr\u003e e.g., `delete client 3`","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"Ruiting1"},"content":"**send** | `send c/INDEX1 INDEX2…​ p/INDEX1 INDEX2…​` \u003cbr\u003e e.g. `send c/1 2 4 5 p/ 1 4`","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"Ruiting1"},"content":"**sort** | `sort postdate asc` or `sort postdate desc`","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Ruiting1":126,"-":136}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-TIC4002-F18-6/tp2/branch/master/graph/badge.svg?token\u003dL9P51AL53B)](https://codecov.io/gh/AY2122S2-TIC4002-F18-6/tp2)","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruiting1":1,"-":18}},{"path":"docs/team/ruiting1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"## Documentation","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"- User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    - [#PR18](https://github.com/AY2122S2-TIC4002-F18-6/tp2/pull/18)","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"- Developer Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    - [#PR22](https://github.com/AY2122S2-TIC4002-F18-6/tp2/pull/22)","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"- Readme","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    - [#PR12](https://github.com/AY2122S2-TIC4002-F18-6/tp2/pull/12)","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"- AboutUs","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"## Features","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"- [#PR14](https://github.com/AY2122S2-TIC4002-F18-6/tp2/pull/14)","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    - Create two panel screen to be able to show both client and post list","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    - Create post structures and post list structures","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    - Reconfigure the model and storage to match the added Post structure and PostList","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Ruiting1":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_INVALID_POST_DISPLAYED_INDEX \u003d \"The post index provided is invalid\";","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_POST_SENT_TO_DUPLICATE_CLIENT_ALL \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            \"Warning: This post \\n%1$s\\n has already sent to all the clients you selected! \"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"                    + \"Please choose other clients \";","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_POST_SENT_TO_DUPLICATE_CLIENT \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            \"This post \\n%1$s\\n has already sent to these clients : \\n%2$s\\n, \"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"                    + \"these clients will not receive this post, \"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"                    + \"the system will send the post to the rest clients you selected\";","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_EMPTY_LIST_ERROR \u003d \"There isn\u0027t any items in the list\";","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruiting1":11,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    /** Returns an unmodifiable view of the filtered list of posts */","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    ObservableList\u003cPost\u003e getFilteredPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ruiting1":5,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e getFilteredPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        return model.getFilteredPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ruiting1":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person/post added: %1$s\"; //TODO : separate person and post","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_DUPLICATE_POST \u003d \"This post already exists in the post list\";","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    private Person toAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    private Post postToAdd;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"     * Creates an AddCommand to add the specified {@code Post}","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    public AddCommand(Post post) {","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(post);","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"        postToAdd \u003d post;","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        String outputMsg \u003d \"\";","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"        if (toAdd !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"            outputMsg +\u003d String.format(MESSAGE_SUCCESS, toAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        } else if (postToAdd !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"            if (model.hasPost(postToAdd)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_POST);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"            model.addPost(postToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"            outputMsg +\u003d String.format(MESSAGE_SUCCESS, postToAdd);","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"            outputMsg +\u003d \"something went wrong, you must add a client or a post.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"        return new CommandResult(outputMsg);","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"        //return toAdd.equals(((AddCommand) other).toAdd)","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"        //        \u0026\u0026 postToAdd.equals(((AddCommand) other).postToAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"        return toAdd !\u003d null ? toAdd.equals(((AddCommand) other).toAdd)","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"                : postToAdd !\u003d null ? postToAdd.equals(((AddCommand) other).postToAdd) : false;","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"        //return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruiting1":39,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_DELETE_POST_SUCCESS \u003d \"Deleted Post: %1$s\";","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    private final ListType listType;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     * @param listType {@code Client} List or {@code Post} List from which to delete the item","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"     * @param targetIndex the target index to be deleted from the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    public DeleteCommand(ListType listType, Index targetIndex) {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        this.listType \u003d listType;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        if (listType \u003d\u003d ListType.CLIENT) {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"            List\u003cPost\u003e lastShownList \u003d model.getFilteredPostList();","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_POST_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"            Post postToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"            model.deletePost(postToDelete);","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, postToDelete));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruiting1":22,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/SendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_POSTS;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"public class SendCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD \u003d \"send\";","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Send the post to client(s) \";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sent the selected post %1$s successfully to the client %2$s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    private List\u003cIndex\u003e clientIdx \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private List\u003cIndex\u003e postIdx \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"     * Creates an SendCommand to send the post(s) to the client(s)","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    public SendCommand(List\u003cIndex\u003e clientIdx, List\u003cIndex\u003e postIdx) {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        this.clientIdx.addAll(clientIdx);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        this.postIdx.addAll(postIdx);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        List\u003cPerson\u003e lastShownClientList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        List\u003cPost\u003e lastShownPostList \u003d model.getFilteredPostList();","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        Set\u003cString\u003e selectedClientName \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        Set\u003cString\u003e selectedPostTitle \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        for (Index cIdx : clientIdx) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"            if (cIdx.getZeroBased() \u003e\u003d lastShownClientList.size()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"                selectedClientName.add(lastShownClientList.get(cIdx.getZeroBased()).getName().fullName);","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        String outputMsg \u003d \"\";","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        for (Index pIdx : postIdx) {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"            if (pIdx.getZeroBased() \u003e\u003d lastShownPostList.size()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_POST_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"                Post targetPost \u003d lastShownPostList.get(pIdx.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"                selectedPostTitle.add(targetPost.getTitle().value);","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"                Set\u003cString\u003e currentSentClient \u003d targetPost.getSentCid();","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"                Set\u003cString\u003e unSentClientName \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"                Set\u003cString\u003e restClientName \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                unSentClientName.addAll(selectedClientName);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                restClientName.addAll(selectedClientName);","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"                unSentClientName.removeAll(currentSentClient);","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"                restClientName.removeAll(unSentClientName);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"                if (unSentClientName.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"                    outputMsg +\u003d String.format(","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"                            Messages.MESSAGE_POST_SENT_TO_DUPLICATE_CLIENT_ALL, targetPost.getTitle().value) + \"\\n\";","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"                } else if (unSentClientName.size() \u003c selectedClientName.size()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"                    outputMsg +\u003d String.format(","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"                            Messages.MESSAGE_POST_SENT_TO_DUPLICATE_CLIENT,","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"                            targetPost.getTitle().value, restClientName.toString()) + \"\\n\";","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"                } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"                    outputMsg +\u003d String.format(","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"                            MESSAGE_SUCCESS, targetPost.toString(), selectedClientName.toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"                }","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"                //currentSentClient.addAll(selectedClientName);","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"                currentSentClient.addAll(unSentClientName);","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"                model.updatePostSentCid(currentSentClient, targetPost);","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"        model.updateFilteredPostList(PREDICATE_SHOW_ALL_POSTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"        //return new CommandResult(","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"        //       String.format(MESSAGE_SUCCESS, selectedPostTitle.toString(), selectedClientName.toString()));","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"        return new CommandResult(outputMsg);","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Ruiting1":91}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sort the list by postdate\";","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private String keyword;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    private String order;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     * Creates an SortCommand to sort the list","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    public SortCommand(String keyword, String order) {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        List\u003cPost\u003e lastShownPostList \u003d model.getFilteredPostList();","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        if (lastShownPostList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"            throw new CommandException(Messages.MESSAGE_EMPTY_LIST_ERROR);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        List\u003cPost\u003e lastShownPostListCopy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        lastShownPostListCopy.addAll(lastShownPostList);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        switch (keyword) {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        case \"postdate\":","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        default: {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"            if (order.equals(\"asc\")) {","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"                Collections.sort(lastShownPostListCopy, (t1, t2) -\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"                    if (t1.getPostDate().value.isBefore(t2.getPostDate().value)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"                        return -1;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"                    } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"                        return 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"                    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"                });","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"                Collections.sort(lastShownPostListCopy, (t1, t2) -\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"                    if (t1.getPostDate().value.isAfter(t2.getPostDate().value)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"                        return -1;","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"                    } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"                        return 1;","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"                    }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"                });","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        model.updateWholePostList(lastShownPostListCopy);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"        model.updateFilteredPostList(Model.PREDICATE_SHOW_ALL_POSTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        return new CommandResult(\"successfully sort\");","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Ruiting1":72}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTDATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CommonRegexPattern.BASIC_TYPE_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Category;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Content;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Notes;","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.PostDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Title;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        Matcher matcherType \u003d BASIC_TYPE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        ListType listType;","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        String args1;","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        if (matcherType.matches()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"            listType \u003d (!(matcherType.group(\"isClient\") \u003d\u003d null)","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"                    \u0026\u0026 !(matcherType.group(\"isClient\").isEmpty())) ? ListType.CLIENT","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"                    : (!(matcherType.group(\"isPost\") \u003d\u003d null)","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"                    \u0026\u0026 !(matcherType.group(\"isPost\").isEmpty())) ? ListType.POST : null;","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"            args1 \u003d matcherType.group(\"args\");","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            if (listType \u003d\u003d ListType.CLIENT) {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                        ArgumentTokenizer.tokenize(args1, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"            } else if (listType \u003d\u003d ListType.POST) {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"                ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"                        ArgumentTokenizer.tokenize(args1, PREFIX_TITLE, PREFIX_CONTENT, PREFIX_POSTDATE,","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"                                PREFIX_CATEGORY, PREFIX_NOTES);","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"                if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_CONTENT, PREFIX_POSTDATE,","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"                        PREFIX_CATEGORY, PREFIX_NOTES)","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"                        || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"                Title title \u003d new Title(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"                Content content \u003d new Content(argMultimap.getValue(PREFIX_CONTENT).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"                PostDate postDate \u003d ParserUtil.parsePostDate(argMultimap.getValue(PREFIX_POSTDATE).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"                Category category \u003d new Category(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"                Notes notes \u003d new Notes(argMultimap.getValue(PREFIX_NOTES).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"                Post post \u003d new Post(title, content, postDate, category, notes, new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"                return new AddCommand(post);","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"                throw new ParseException(\"You need declare client or post you want to add, \"","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"                        + \"the second parameter can only be client|c or post|p\");","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"            throw new ParseException(\"You need declare client or post you want to add\");","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Ruiting1":59,"-":62}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.commands.SendCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        case SendCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"            return new SendCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruiting1":9,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    /* Person Prefix definitions */","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    /* Post Prefix definitions */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix PREFIX_CONTENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix PREFIX_POSTDATE \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"ca/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix PREFIX_NOTES \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    /* SendCommand Prefix */","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix SEND_PREFIX_CLIENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public static final Prefix SEND_PREFIX_POST \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Ruiting1":12,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CommonRegexPattern.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"public class CommonRegexPattern {","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern BASIC_TYPE_FORMAT \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"((?\u003cisClient\u003eclient|c)|(?\u003cisPost\u003epost|p))(?\u003cargs\u003e(.|\\\\s)*)\");","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern INDEX_LIST_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+(?:\\\\s+\\\\d+)*)\");","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern BASIC_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})(?\u003cmonth\u003e\\\\d{2})(?\u003cday\u003e\\\\d{2})\"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"                    + \" \" + \"(?\u003chour\u003e\\\\d{2})(?\u003cminute\u003e\\\\d{2})\");","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Ruiting1":16}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CommonRegexPattern.BASIC_TYPE_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        final Matcher matcherType \u003d BASIC_TYPE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        ListType listType;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        String args1;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        if (matcherType.matches()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"            listType \u003d (!(matcherType.group(\"isClient\") \u003d\u003d null)","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"                    \u0026\u0026 !(matcherType.group(\"isClient\").isEmpty())) ? ListType.CLIENT","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"                    : (!(matcherType.group(\"isPost\") \u003d\u003d null)","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"                    \u0026\u0026 !(matcherType.group(\"isPost\").isEmpty())) ? ListType.POST : null;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"            args1 \u003d matcherType.group(\"args\");","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"                Index index \u003d ParserUtil.parseIndex(args1);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"                return new DeleteCommand(listType, index);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"            throw new ParseException(\"You need declare which list you want to delete from\");","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Ruiting1":22,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CommonRegexPattern.BASIC_DATE_TIME_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CommonRegexPattern.INDEX_LIST_ARGS_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.PostDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"     * Parses {@code indexListString} into an {@code List\u003cIndex\u003e} and returns it.","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    public static List\u003cIndex\u003e parseIndexList(String indexListString) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        Matcher matcher \u003d INDEX_LIST_ARGS_FORMAT.matcher(indexListString.trim());","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        List\u003cInteger\u003e result;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"            result \u003d Stream.of(matcher.group(\"targetIndex\")","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"                            .split(\"\\\\s+\"))","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"                            .mapToInt(Integer::parseInt).boxed()","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            if (result.contains(0)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                return result.stream()","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                        .map(idx -\u003e Index.fromOneBased(idx))","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"            throw new ParseException(\"You must enter some integer values\");","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"     * Parses a {@code String postDate} into an {@code PostDate}.","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"     * @throws ParseException if the given {@code postDate} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"Ruiting1"},"content":"    public static PostDate parsePostDate(String postDate) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(postDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"Ruiting1"},"content":"        String trimmedPostDate \u003d postDate.trim();","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"Ruiting1"},"content":"        Matcher matcher \u003d BASIC_DATE_TIME_FORMAT.matcher(trimmedPostDate);","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"Ruiting1"},"content":"            throw new ParseException(PostDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"Ruiting1"},"content":"        return new PostDate(LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"                                            Integer.parseInt(matcher.group(\"month\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"                                            Integer.parseInt(matcher.group(\"day\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"                                            Integer.parseInt(matcher.group(\"hour\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"                                            Integer.parseInt(matcher.group(\"minute\"))));","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Ruiting1":56,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.SEND_PREFIX_CLIENT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.logic.parser.CliSyntax.SEND_PREFIX_POST;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.commands.SendCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"public class SendCommandParser implements Parser\u003cSendCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     * Parses the given {@code String} of arguments in the context of the SendCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"     * and returns a SendCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public SendCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                ArgumentTokenizer.tokenize(args, SEND_PREFIX_CLIENT, SEND_PREFIX_POST);","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        List\u003cIndex\u003e clientIdx \u003d ParserUtil.parseIndexList(argMultimap.getValue(SEND_PREFIX_CLIENT).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        List\u003cIndex\u003e postIdx \u003d ParserUtil.parseIndexList(argMultimap.getValue(SEND_PREFIX_POST).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        return new SendCommand(clientIdx, postIdx);","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Ruiting1":31}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    private static final Pattern SORT_KEYWORD_ORDER_ARGS \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"(?\u003ckeyword\u003epostdate)\\\\s+(?\u003corder\u003easc|desc)\");","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"        Matcher matcher \u003d SORT_KEYWORD_ORDER_ARGS.matcher(args.trim());","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"            throw new ParseException(\"This is not a correct sort command\");","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        String keyword \u003d matcher.group(\"keyword\");","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        String order \u003d matcher.group(\"order\");","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return new SortCommand(keyword, order);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Ruiting1":32}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.UniquePostList;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    private final UniquePostList posts;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        posts \u003d new UniquePostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     * Creates an AddressBook using the Persons and posts in the {@code toBeCopied}","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the contents of the post list with {@code posts}.","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"     * {@code posts} must not contain duplicate posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"    public void setPosts(List\u003cPost\u003e posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        this.posts.setPosts(posts);","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"        setPosts(newData.getPostList());","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"    //// post-level operations","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if a post with the same identity as {@code post} exists in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"    public boolean hasPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"        return posts.contains(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"     * Adds a post to the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"     * The post must not already exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"    public void addPost(Post p) {","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"        posts.add(p);","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the given post {@code target} in the list with {@code editedPost}.","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"     * The post identity of {@code editedPerson} must not be the same as another existing post in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"    public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"        posts.setPost(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"Ruiting1"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"Ruiting1"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"    public void removePost(Post key) {","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"        posts.remove(key);","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":149,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"     * Update the {@code targetPost} original sent out client id set based on {@code updatedSentCid} set","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"Ruiting1"},"content":"     * The updatedSentCid and targetPost must be declared.","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"    public void updatePostSentCid(Set\u003cString\u003e updatedSentCid, Post targetPost) {","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(updatedSentCid, targetPost);","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"        posts.updatePostSentCid(updatedSentCid, targetPost);","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"     * Clear all the items in the {@code UniquePostList} from this {@code AddressBook}.","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"    public void clearPostList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"        posts.clear();","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"Ruiting1"},"content":"     * Adds the entire source post list to the {@code UniquePostList}","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"Ruiting1"},"content":"     * @param postList the source post list","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"Ruiting1"},"content":"    public void addAllPosts(List\u003cPost\u003e postList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"Ruiting1"},"content":"        posts.addAllPosts(postList);","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":186,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":187,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e getPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":188,"author":{"gitId":"Ruiting1"},"content":"        return posts.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-02"},{"lineNumber":189,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":190,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons) \u0026\u0026 posts.equals(((AddressBook) other).posts));","lastModifiedDate":"2022-03-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":201,"author":{"gitId":"Ruiting1"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruiting1":86,"-":118}},{"path":"src/main/java/seedu/address/model/ListType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public enum ListType {","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    CLIENT,","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    POST","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Ruiting1":6}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    Predicate\u003cPost\u003e PREDICATE_SHOW_ALL_POSTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if a post with the same identity as {@code post} exists in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"    boolean hasPost(Post post);","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"     * Deletes the given post.","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"     * The post must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"    void deletePost(Post target);","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"     * Adds the given post.","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"     * {@code post} must not already exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"    void addPost(Post post);","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the given post {@code target} with {@code editedPost}.","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"     * The post identity of {@code editedPost} must not be the same as another existing post in the address book.","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"    void setPost(Post target, Post editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"    /** Returns an unmodifiable view of the filtered post list */","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"    ObservableList\u003cPost\u003e getFilteredPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"     * Updates the filter of the filtered post list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"    void updateFilteredPostList(Predicate\u003cPost\u003e predicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"    void updatePostSentCid(Set\u003cString\u003e updatedSentCid, Post targetPost);","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"     * Updates the whole post list from an entire new {@code postList}","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"     * @param postList the source post list","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"    void updateWholePostList(List\u003cPost\u003e postList);","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ruiting1":48,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private final FilteredList\u003cPost\u003e filteredPosts;","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        filteredPosts \u003d new FilteredList\u003c\u003e(this.addressBook.getPostList());","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"    public boolean hasPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"        return addressBook.hasPost(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"    public void deletePost(Post target) {","lastModifiedDate":"2022-03-02"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"        addressBook.removePost(target);","lastModifiedDate":"2022-03-02"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"    public void addPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"        addressBook.addPost(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"        updateFilteredPostList(PREDICATE_SHOW_ALL_POSTS);","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"    public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"        addressBook.setPost(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"     * Returns an unmodifiable view of the list of {@code Post} backed by the internal list of","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e getFilteredPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"        return filteredPosts;","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":172,"author":{"gitId":"Ruiting1"},"content":"    public void updateFilteredPostList(Predicate\u003cPost\u003e predicate) {","lastModifiedDate":"2022-03-02"},{"lineNumber":173,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":174,"author":{"gitId":"Ruiting1"},"content":"        filteredPosts.setPredicate(predicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"    public void updatePostSentCid(Set\u003cString\u003e updatedSentCid, Post targetPost) {","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(updatedSentCid, targetPost);","lastModifiedDate":"2022-03-20"},{"lineNumber":182,"author":{"gitId":"Ruiting1"},"content":"        addressBook.updatePostSentCid(updatedSentCid, targetPost);","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"Ruiting1"},"content":"        updateFilteredPostList(PREDICATE_SHOW_ALL_POSTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":184,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"Ruiting1"},"content":"    public void updateWholePostList(List\u003cPost\u003e postList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"Ruiting1"},"content":"        addressBook.clearPostList();","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"Ruiting1"},"content":"        addressBook.addAllPosts(postList);","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-02"},{"lineNumber":209,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 filteredPosts.equals(other.filteredPosts);","lastModifiedDate":"2022-03-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruiting1":63,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     * Returns an unmodifiable view of the posts list.","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     * This list will not contain any duplicate posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    ObservableList\u003cPost\u003e getPostList();","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruiting1":9,"-":17}},{"path":"src/main/java/seedu/address/model/post/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Category {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     * @param category A valid category.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public Category(String category) {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d category;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Category // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Category) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":35}},{"path":"src/main/java/seedu/address/model/post/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Content {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Content}.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     * @param content A valid content.","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public Content(String content) {","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d content;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Content // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Content) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":34}},{"path":"src/main/java/seedu/address/model/post/Notes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Notes {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Notes}.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     * @param notes A valid notes.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public Notes(String notes) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Notes // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Notes) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":32}},{"path":"src/main/java/seedu/address/model/post/Post.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"public class Post {","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    private final Title title;","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    private final Content content;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    private final PostDate postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    private final Category category;","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    private final Notes notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    private Set\u003cString\u003e sentCid \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     * Constructor to create a Post","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public Post(Title title, Content content, PostDate postDate, Category category, Notes notes, Set\u003cString\u003e sentCid) {","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        this.postDate \u003d postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        this.sentCid.addAll(sentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        return title;","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    public Content getContent() {","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        return content;","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    public PostDate getPostDate() {","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        return postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    public Category getCategory() {","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        return category;","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    public Notes getNotes() {","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        return notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    public Set\u003cString\u003e getSentCid() {","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        return sentCid;","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"    public void updateSentCid(Set\u003cString\u003e updatedSentCid) {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        this.sentCid \u003d updatedSentCid;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if both posts have the same title.","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"     * This defines a weaker notion of equality between two posts.","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    public boolean isSamePost(Post otherPost) {","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"        if (otherPost \u003d\u003d this) {","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"        return otherPost !\u003d null","lastModifiedDate":"2022-02-28"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getTitle().equals(getTitle());","lastModifiedDate":"2022-02-28"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if both posts have the same identity and data fields.","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"     * This defines a stronger notion of equality between two posts.","lastModifiedDate":"2022-02-28"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-28"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-02-28"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"        if (!(other instanceof Post)) {","lastModifiedDate":"2022-02-28"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-28"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"        Post otherPost \u003d (Post) other;","lastModifiedDate":"2022-02-28"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"        return otherPost.getTitle().equals(getTitle())","lastModifiedDate":"2022-02-28"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getContent().equals(getContent())","lastModifiedDate":"2022-02-28"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getPostDate().equals(getPostDate())","lastModifiedDate":"2022-02-28"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getCategory().equals(getCategory())","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 otherPost.getNotes().equals(getNotes());","lastModifiedDate":"2022-02-28"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-02-28"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"        return Objects.hash(title, content, postDate, category, notes, sentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"        builder.append(getTitle())","lastModifiedDate":"2022-02-28"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; Content: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"                .append(getContent())","lastModifiedDate":"2022-02-28"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; PostDate: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"                .append(getPostDate().toString())","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"                .append(getCategory())","lastModifiedDate":"2022-02-28"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"                .append(\"; Notes: \")","lastModifiedDate":"2022-02-28"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"                .append(getNotes());","lastModifiedDate":"2022-02-28"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"        Set\u003cString\u003e sentCid \u003d getSentCid();","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"        if (!sentCid.isEmpty()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"            builder.append(\"; Sent out Clients ID: \");","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"            sentCid.forEach(builder::append);","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"        return builder.toString();","lastModifiedDate":"2022-02-28"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":119}},{"path":"src/main/java/seedu/address/model/post/PostDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"public class PostDate {","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Post Date format should be : yyyymmdd HHmm \"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"            + \"e.g. 20220314 1800\";","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code PostDate}.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     * @param postDate A valid postDate.","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public PostDate(LocalDateTime postDate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        return DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\").format(value);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof PostDate // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((PostDate) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":40}},{"path":"src/main/java/seedu/address/model/post/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"public class Title {","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"    public final String value;","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"     * @param title A valid title.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    public Title(String title) {","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"        this.value \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public String toString() {","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return value;","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 value.equals(((Title) other).value)); // state check","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":31}},{"path":"src/main/java/seedu/address/model/post/UniquePostList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.exceptions.DuplicatePostException;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.exceptions.PostNotFoundException;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"public class UniquePostList implements Iterable\u003cPost\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    private final ObservableList\u003cPost\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    private final ObservableList\u003cPost\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if the list contains an equivalent post as the given argument.","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public boolean contains(Post toCheck) {","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePost);","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     * Adds a post to the post list.","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     * The post must not already exist in the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    public void add(Post toAdd) {","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicatePostException();","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the post {@code target} in the post list with {@code editedPost}.","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"     * {@code target} must exist in the post list.","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"     * The post identity of {@code editedPost} must not be the same as another existing post in the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(target, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"            throw new PostNotFoundException();","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"        if (!target.isSamePost(editedPost) \u0026\u0026 contains(editedPost)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicatePostException();","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        internalList.set(index, editedPost);","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     * Removes the equivalent post from the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"     * The post must exist in the list.","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    public void remove(Post toRemove) {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"            throw new PostNotFoundException();","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"    public void setPosts(UniquePostList replacement) {","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"     * Replaces the contents of this list with {@code posts}.","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"     * {@code posts} must not contain duplicate posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"    public void setPosts(List\u003cPost\u003e posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(posts);","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"        if (!postsAreUnique(posts)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"            throw new DuplicatePostException();","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"        internalList.setAll(posts);","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":94,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"     * Update the {@code targetPost} original sent out client id set based on {@code updatedSentCid} set","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"     * The updatedSentCid and targetPost must be declared.","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"    public void updatePostSentCid(Set\u003cString\u003e updatedSentCid, Post targetPost) {","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"Ruiting1"},"content":"        requireAllNonNull(targetPost, updatedSentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"Ruiting1"},"content":"        int index \u003d internalList.indexOf(targetPost);","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"            throw new PostNotFoundException();","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"        internalList.get(index).updateSentCid(updatedSentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Ruiting1"},"content":"    public void clear() {","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"        internalList.clear();","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"    public void addAllPosts(List\u003cPost\u003e postList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"        internalList.addAll(postList);","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-02"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"    public ObservableList\u003cPost\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"    public Iterator\u003cPost\u003e iterator() {","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"Ruiting1"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-02"},{"lineNumber":127,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":129,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"Ruiting1"},"content":"                || (other instanceof UniquePostList // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 internalList.equals(((UniquePostList) other).internalList));","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"Ruiting1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"Ruiting1"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":142,"author":{"gitId":"Ruiting1"},"content":"     * Returns true if {@code posts} contains only unique posts.","lastModifiedDate":"2022-03-02"},{"lineNumber":143,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":144,"author":{"gitId":"Ruiting1"},"content":"    private boolean postsAreUnique(List\u003cPost\u003e posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"        for (int i \u003d 0; i \u003c posts.size() - 1; i++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"            for (int j \u003d i + 1; j \u003c posts.size(); j++) {","lastModifiedDate":"2022-03-02"},{"lineNumber":147,"author":{"gitId":"Ruiting1"},"content":"                if (posts.get(i).isSamePost(posts.get(j))) {","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"Ruiting1"},"content":"                    return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":149,"author":{"gitId":"Ruiting1"},"content":"                }","lastModifiedDate":"2022-03-02"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":152,"author":{"gitId":"Ruiting1"},"content":"        return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":157}},{"path":"src/main/java/seedu/address/model/post/exceptions/DuplicatePostException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post.exceptions;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" * Signals that the operation will result in duplicate Posts (Posts are considered duplicates if they have the same","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" * identity).","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"public class DuplicatePostException extends RuntimeException {","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public DuplicatePostException() {","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"        super(\"Operation would result in duplicate posts\");","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":12}},{"path":"src/main/java/seedu/address/model/post/exceptions/PostNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.model.post.exceptions;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":" * Signals that the operation is unable to find the specified post.","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"public class PostNotFoundException extends RuntimeException{","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Category;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Content;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Notes;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.PostDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Title;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"                    getTagSet(\"clients\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                    getTagSet(\"clients\", \"VIP1\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"                    getTagSet(\"clients\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"                    getTagSet(\"clients\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"                    getTagSet(\"clients\", \"VIP2\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"                    getTagSet(\"clients\", \"inactive\"))","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        };","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    public static Post[] getSamplePosts() {","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        return new Post[]{","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"            new Post(new Title(\"Important Notice：Warehouse Location changed in Guangzhou\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"                    new Content(\"Dear Customers, please notice that our ware house location changed to xx xxx xxxxx\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"                    new PostDate(LocalDateTime.of(2022, Month.MARCH, 18, 18, 0)),","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"                    new Category(\"notice\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"                    new Notes(\"send to all the clients, remember sent out by 18/03\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"                    getSendCidSet(\"Bernice Yu\", \"Irfan Ibrahim\", \"Alex Yeoh\", \"Charlotte Oliveiro\", \"David Li\")","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"            ),","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            new Post(new Title(\"Celebrate Our 6th Birthday with $6.6 OFF\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"                    new Content(\"Birthday Sales coming! Birthday goodies for everyone! \"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"                            + \"Celebrate our Birthday with BEST Deals!\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                    new PostDate(LocalDateTime.of(2022, Month.MARCH, 19, 6, 6)),","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                    new Category(\"promotion\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"                    new Notes(\"remember sent out by 20/03, too all the registered client\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"                    getSendCidSet(\"Bernice Yu\", \"Irfan Ibrahim\")","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"            ),","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"            new Post(new Title(\"[Notice] Drop in China Shipping Rate for all Sea shipment\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"                    new Content(\"Dear (Ship-For-Me) Customers, the adjustment on the rate will be \"","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"                            + \"$0.7/500g for Shanghai warehouse and $0.6/500g for Guangzhou warehouse, \"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"                            + \"thanks for your support and hope to serve you again!\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"                    new PostDate(LocalDateTime.of(2022, Month.APRIL, 1, 9, 0)),","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"                    new Category(\"notice\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"                    new Notes(\"can not sent before the postdate, the shipping rate only start from April 1st\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"                    getSendCidSet()","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"            ),","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"            new Post(new Title(\"Your Parcel is ready to ship!\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"                    new Content(\"You order has already arrived our Guangzhou warehouse, \"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"                            + \"please go our website to check : https://www.exampleshipment.sg , \"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"                            + \"and remember the free storage period\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"                    new PostDate(LocalDateTime.of(2022, Month.FEBRUARY, 28, 18, 0)),","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"                    new Category(\"service\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"                    new Notes(\"remember sent out by 01/03\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"                    getSendCidSet(\"Bernice Yu\")","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"            ),","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"        for (Post samplePost : getSamplePosts()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"Ruiting1"},"content":"            sampleAb.addPost(samplePost);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"Ruiting1"},"content":"     * Returns a snet client id set containing the list of strings given.","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"    public static Set\u003cString\u003e getSendCidSet(String... strings) {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"Ruiting1"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"Ruiting1"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Ruiting1":64,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import com.fasterxml.jackson.annotation.JsonFormat;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Category;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Content;","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Notes;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.PostDate;","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Title;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"public class JsonAdaptedPost {","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    private final String title;","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    private final String content;","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    private final LocalDateTime postDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    private final String category;","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private final String notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    private final List\u003cString\u003e sentCid \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a {@code JsonAdaptedPost} with the given post details.","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    @JsonCreator","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    public JsonAdaptedPost(@JsonProperty(\"title\") String title,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"content\") String content,","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"                           @JsonFormat(shape \u003d JsonFormat.Shape.STRING, pattern \u003d \"dd/MM/yyyy HH:mm\")","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"postDate\") LocalDateTime postDate,","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"category\") String category,","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"notes\") String notes,","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"                           @JsonProperty(\"sentCid\") List\u003cString\u003e sentCid) {","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-02-28"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-02-28"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        this.postDate \u003d postDate;","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-02-28"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-28"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        if (sentCid !\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"            this.sentCid.addAll(sentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-28"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"     * Converts a given {@code Post} into this class for Jackson use.","lastModifiedDate":"2022-02-28"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-28"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    public JsonAdaptedPost(Post source) {","lastModifiedDate":"2022-02-28"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        title \u003d source.getTitle().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        content \u003d source.getContent().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"        postDate \u003d source.getPostDate().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        category \u003d source.getCategory().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        notes \u003d source.getNotes().value;","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        sentCid.addAll(source.getSentCid().stream().collect(Collectors.toList()));","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-28"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"     * Converts this Jackson-friendly adapted post object into the model\u0027s {@code Post} object.","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted post.","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    public Post toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        final List\u003cString\u003e postSentCid \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"        postSentCid.addAll(sentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"        final Content modelContent \u003d new Content(content);","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        final PostDate modelPostdate \u003d new PostDate(postDate);","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"        final Category modelCategory \u003d new Category(category);","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"        final Notes modelNotes \u003d new Notes(notes);","lastModifiedDate":"2022-03-02"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"        final Set\u003cString\u003e modelSentCid \u003d new HashSet\u003c\u003e(postSentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"        return new Post(modelTitle, modelContent, modelPostdate, modelCategory, modelNotes, modelSentCid);","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":83}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_DUPLICATE_POST \u003d \"Posts list contains duplicate post(s).\";","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private final List\u003cJsonAdaptedPost\u003e posts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-28"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"                                       @JsonProperty(\"posts\") List\u003cJsonAdaptedPost\u003e posts) {","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        this.posts.addAll(posts);","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        posts.addAll(source.getPostList().stream().map(JsonAdaptedPost::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        for (JsonAdaptedPost jsonAdaptedPost : posts) {","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"            Post post \u003d jsonAdaptedPost.toModelType();","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"            if (addressBook.hasPost(post)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_POST);","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"            addressBook.addPost(post);","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ruiting1":17,"-":59}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    private PostListPanel postListPanel;","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    private StackPane postListPanelPlaceholder;","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"        postListPanel \u003d new PostListPanel(logic.getFilteredPostList());","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"        postListPanelPlaceholder.getChildren().add(postListPanel.getRoot());","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"    public PostListPanel getPostListPanel() {","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"        return postListPanel;","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ruiting1":11,"-":196}},{"path":"src/main/java/seedu/address/ui/PostCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":" * A UI component that displays information of a {@code Post}.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"public class PostCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    private static final String FXML \u003d \"PostListCard.fxml\";","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    public final Post post;","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    private Label id;","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    private Label title;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    private Label content;","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private Label postdate;","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    private Label category;","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    private Label notes;","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    private Label sentCid;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     * Creates a {@code PostCard} with the given {@code Post} and index to display.","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    public PostCard(Post post, int displayedIndex) {","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        super(FXML);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        this.post \u003d post;","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        title.setText(post.getTitle().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        content.setText(post.getContent().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        postdate.setText(post.getPostDate().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"        category.setText(post.getCategory().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        notes.setText(post.getNotes().value);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        sentCid.setText(\"Already sent to: \" + post.getSentCid().toString());","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        if (!(other instanceof PostCard)) {","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"        // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"        PostCard card \u003d (PostCard) other;","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"                \u0026\u0026 post.equals(card.post);","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":69}},{"path":"src/main/java/seedu/address/ui/PostListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"public class PostListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    private static final String FXML \u003d \"PostListPanel.fxml\";","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PostListPanel.class);","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    private ListView\u003cPost\u003e postListView;","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"     * Creates a {@code PostListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public PostListPanel(ObservableList\u003cPost\u003e postList) {","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        super(FXML);","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        postListView.setItems(postList);","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"        postListView.setCellFactory(listView -\u003e new PostListPanel.PostListViewCell());","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Post} using a {@code PostCard}.","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    class PostListViewCell extends ListCell\u003cPost\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"        protected void updateItem(Post post, boolean empty) {","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"            super.updateItem(post, empty);","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"            if (empty || post \u003d\u003d null) {","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"                setText(null);","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"                setGraphic(new PostCard(post, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"Ruiting1":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"\u003cfx:root minHeight\u003d\"600.0\" minWidth\u003d\"900.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"                \u003cSplitPane dividerPositions\u003d\"0.29797979797979796, 0.5\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                    \u003citems\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"                        \u003cVBox\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"                                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"                                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"300.0\" prefWidth\u003d\"22.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"                        \u003cVBox fx:id\u003d\"postList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                            \u003cStackPane fx:id\u003d\"postListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Ruiting1":22,"-":51}},{"path":"src/main/resources/view/PostListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"                \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$title\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"content\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$content\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"postdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$postdate\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$category\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"            \u003cLabel fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$notes\" /\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"         \u003cLabel fx:id\u003d\"sentCid\" text\u003d\"\\$sentCid\" /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":40}},{"path":"src/main/resources/view/PostListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"    \u003cListView fx:id\u003d\"postListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"Ruiting1":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        String deleteCommand \u003d \"delete c 9\";","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        String addCommand \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"                AddCommand.COMMAND_WORD + \" \" + ListType.CLIENT.toString().toLowerCase() + NAME_DESC_AMY","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"                        + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ruiting1":5,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    //@Test","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    //public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    //    assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    //}","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":120,"author":{"gitId":"Ruiting1"},"content":"        public void addPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":121,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":151,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":152,"author":{"gitId":"Ruiting1"},"content":"        public boolean hasPost(Post post) {","lastModifiedDate":"2022-03-02"},{"lineNumber":153,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":154,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":157,"author":{"gitId":"Ruiting1"},"content":"        public void deletePost(Post target) {","lastModifiedDate":"2022-03-02"},{"lineNumber":158,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":159,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":162,"author":{"gitId":"Ruiting1"},"content":"        public void setPost(Post target, Post editedPost) {","lastModifiedDate":"2022-03-02"},{"lineNumber":163,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":164,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":176,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":177,"author":{"gitId":"Ruiting1"},"content":"        public ObservableList\u003cPost\u003e getFilteredPostList() {","lastModifiedDate":"2022-03-02"},{"lineNumber":178,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":179,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":180,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":181,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":182,"author":{"gitId":"Ruiting1"},"content":"        public void updateFilteredPostList(Predicate\u003cPost\u003e predicate) {","lastModifiedDate":"2022-03-02"},{"lineNumber":183,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-02"},{"lineNumber":184,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":185,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"Ruiting1"},"content":"        public void updatePostSentCid(Set\u003cString\u003e updatedSentCid, Post targetPost) {","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"Ruiting1"},"content":"        public void updateWholePostList(List\u003cPost\u003e postList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Ruiting1":49,"-":190}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ListType.CLIENT, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ListType.CLIENT, outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ListType.CLIENT, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ListType.CLIENT, outOfBoundIndex);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(ListType.CLIENT, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(ListType.CLIENT, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(ListType.CLIENT, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Ruiting1":8,"-":102}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"                + PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"                + VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"Ruiting1"},"content":"                + VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"Ruiting1"},"content":"                + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"Ruiting1"},"content":"                + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"Ruiting1"},"content":"                + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"Ruiting1"},"content":"        assertParseFailure(parser, ListType.CLIENT.toString().toLowerCase() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"Ruiting1"},"content":"                + PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Ruiting1":44,"-":123}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"                DeleteCommand.COMMAND_WORD + \" c \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        assertEquals(new DeleteCommand(ListType.CLIENT, INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Ruiting1":3,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    /* TODO fix later","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(ListType.CLIENT, INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    */","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Ruiting1":5,"-":24}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.post.Post;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"        private final ObservableList\u003cPost\u003e posts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"        @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"        public ObservableList\u003cPost\u003e getPostList() {","lastModifiedDate":"2022-03-03"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"            return posts;","lastModifiedDate":"2022-03-03"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Ruiting1":8,"-":102}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    private static final Path DUPLICATE_POST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePostContentPlanner.json\");","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"    public void toModelType_duplicatePosts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_POST_FILE,","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_POST,","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ruiting1":10,"-":47}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import seedu.address.model.ListType;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"        return AddCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                + ListType.CLIENT.toString().toLowerCase() + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Ruiting1":3,"-":61}}]
